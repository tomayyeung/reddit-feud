syntax = "proto3";

package devvit.gql;

// These types correspond to the GraphQL schemas defined in graphql-go/subgraph/devplatform.
// These are not used for over-the-wire proto serialization, only for type checking.

option go_package = "github.snooguts.net/reddit/reddit-devplatform-monorepo/go-common/generated/protos/types/devvit/gql";
option java_package = "com.reddit.devvit.gql";

// Type returned by GraphQL when requesting a Subreddit with the `devvit` field
message DevvitSubredditManifest {
  // List of all context actions available in the Subreddit
  repeated DevvitContextActions context_actions = 1;
  // List of all app installations in the Subreddit
  repeated DevvitInstallation installations = 2;
}

message DevvitContextActions {
  repeated DevvitContextAction actions = 1;
  // Installation hostname these context actions correspond to, e.g. '7c65897c-d3d1-4070-9db3-25402e093d37.sf-local-app.main.devvit-gateway.reddit.com'
  string hostname = 2;
}

message DevvitContextAction {
  // Which contexts this action should be displayed in
  repeated DevvitContextType context_types = 1;
  // Short, user-facing secondary text to describe what this action is going to do
  string description = 2;
  string id = 3;
  // Whether this action should be displayed for only app-created posts
  bool is_only_for_app_created_posts = 4;
  // User-visible name for the action
  string name = 5;
  // What kind of user can see this action
  repeated DevvitUserType user_types = 6;
}

enum DevvitContextType {
  POST = 0;
  COMMENT = 1;
  SUBREDDIT = 2;
}

enum DevvitUserType {
  MODERATOR = 0;
  MEMBER = 1;
  LOGGED_OUT = 2;
}

message DevvitInstallation {
  // Application config
  DevvitApp app = 1;
  // Hostname to invoke this application at, e.g. '7c65897c-d3d1-4070-9db3-25402e093d37.sf-local-app.main.devvit-gateway.reddit.com'
  string hostname = 2;
  // Installation unique identifier as a UUID
  string id = 3;
  // Version of @devvit/public-api this app was built against, e.g. '0.10.24' or '0.11.0-next-2024-08-28-c7054fdb3.0'
  string public_api_version = 4;
}

message DevvitApp {
  // App unique identifier as a UUID
  string id = 1;
  // Human readable name for the app, e.g. 'My Devvit App'
  string name = 2;
  // Redditor who created this app.
  Redditor owner = 3;
  // App slug, e.g. 'my-devvit-app'
  string slug = 4;
  // Developer-provided app version, e.g. '1.0.0'
  string version = 5;
  // Visibility of the app
  DevvitAppVisibility visibility = 6;
}

// Reddit user type from GraphQL. This has more fields in GraphQL, but
// this represents the ones we're populating from the GQL/Devvit integration.
message Redditor {
  // t2_* userid
  string id = 1;
  string display_name = 2;
}

enum DevvitAppVisibility {
  PUBLIC = 0;
  PRIVATE = 1;
  UNLISTED = 2;
}
