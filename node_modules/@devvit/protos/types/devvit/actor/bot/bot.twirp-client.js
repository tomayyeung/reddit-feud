import { Empty } from '../../../google/protobuf/empty.js';
import { CommandsList, CommandRequest } from './bot.js';
export class BotClientJSON {
    constructor(rpc) {
        this.rpc = rpc;
        this.GetCommands.bind(this);
        this.OnCommand.bind(this);
    }
    GetCommands(request) {
        const data = Empty.toJSON(request);
        const promise = this.rpc.request('devvit.actor.bot.Bot', 'GetCommands', 'application/json', data);
        return promise.then((data) => CommandsList.fromJSON(data));
    }
    OnCommand(request) {
        const data = CommandRequest.toJSON(request);
        const promise = this.rpc.request('devvit.actor.bot.Bot', 'OnCommand', 'application/json', data);
        return promise.then((data) => Empty.fromJSON(data));
    }
}
export class BotClientProtobuf {
    constructor(rpc) {
        this.rpc = rpc;
        this.GetCommands.bind(this);
        this.OnCommand.bind(this);
    }
    GetCommands(request) {
        const data = Empty.encode(request).finish();
        const promise = this.rpc.request('devvit.actor.bot.Bot', 'GetCommands', 'application/protobuf', data);
        return promise.then((data) => CommandsList.decode(data));
    }
    OnCommand(request) {
        const data = CommandRequest.encode(request).finish();
        const promise = this.rpc.request('devvit.actor.bot.Bot', 'OnCommand', 'application/protobuf', data);
        return promise.then((data) => Empty.decode(data));
    }
}
