/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { Empty } from '../../../google/protobuf/empty.js';
import { CommandsList, CommandRequest } from './bot.js';
export interface BotTwirp<T extends TwirpContext = TwirpContext> {
    GetCommands(ctx: T, request: Empty): Promise<CommandsList>;
    OnCommand(ctx: T, request: CommandRequest): Promise<Empty>;
}
export declare enum BotMethod {
    GetCommands = "GetCommands",
    OnCommand = "OnCommand"
}
export declare const BotMethodList: BotMethod[];
export declare function createBotServer<T extends TwirpContext = TwirpContext>(service: BotTwirp<T>): TwirpServer<BotTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=bot.twirp.d.ts.map