/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { FulfillOrderRequest, FulfillOrderResponse, RefundOrderRequest, RefundOrderResponse } from './payments.js';
export interface PaymentProcessorTwirp<T extends TwirpContext = TwirpContext> {
    FulfillOrder(ctx: T, request: FulfillOrderRequest): Promise<FulfillOrderResponse>;
    RefundOrder(ctx: T, request: RefundOrderRequest): Promise<RefundOrderResponse>;
}
export declare enum PaymentProcessorMethod {
    FulfillOrder = "FulfillOrder",
    RefundOrder = "RefundOrder"
}
export declare const PaymentProcessorMethodList: PaymentProcessorMethod[];
export declare function createPaymentProcessorServer<T extends TwirpContext = TwirpContext>(service: PaymentProcessorTwirp<T>): TwirpServer<PaymentProcessorTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=payments.twirp.d.ts.map