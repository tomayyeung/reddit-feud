/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { Args, Arg } from './producer.js';
export interface ProducerTwirp<T extends TwirpContext = TwirpContext> {
    Produce(ctx: T, request: Args): Promise<Arg>;
}
export declare enum ProducerMethod {
    Produce = "Produce"
}
export declare const ProducerMethodList: ProducerMethod[];
export declare function createProducerServer<T extends TwirpContext = TwirpContext>(service: ProducerTwirp<T>): TwirpServer<ProducerTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=producer.twirp.d.ts.map