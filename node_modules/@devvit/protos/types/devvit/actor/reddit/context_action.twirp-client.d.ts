import { Empty } from '../../../google/protobuf/empty.js';
import { ContextActionList, ContextActionRequest, ContextActionResponse } from './context_action.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface ContextActionClient {
    GetActions(request: Empty): Promise<ContextActionList>;
    OnAction(request: ContextActionRequest): Promise<ContextActionResponse>;
}
export declare class ContextActionClientJSON implements ContextActionClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    GetActions(request: Empty): Promise<ContextActionList>;
    OnAction(request: ContextActionRequest): Promise<ContextActionResponse>;
}
export declare class ContextActionClientProtobuf implements ContextActionClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    GetActions(request: Empty): Promise<ContextActionList>;
    OnAction(request: ContextActionRequest): Promise<ContextActionResponse>;
}
export {};
//# sourceMappingURL=context_action.twirp-client.d.ts.map