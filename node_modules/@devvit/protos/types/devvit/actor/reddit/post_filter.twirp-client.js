import { PostFilterRequest, Response } from './post_filter.js';
export class PostFilterClientJSON {
    constructor(rpc) {
        this.rpc = rpc;
        this.Filter.bind(this);
    }
    Filter(request) {
        const data = PostFilterRequest.toJSON(request);
        const promise = this.rpc.request('devvit.actor.reddit.PostFilter', 'Filter', 'application/json', data);
        return promise.then((data) => Response.fromJSON(data));
    }
}
export class PostFilterClientProtobuf {
    constructor(rpc) {
        this.rpc = rpc;
        this.Filter.bind(this);
    }
    Filter(request) {
        const data = PostFilterRequest.encode(request).finish();
        const promise = this.rpc.request('devvit.actor.reddit.PostFilter', 'Filter', 'application/protobuf', data);
        return promise.then((data) => Response.decode(data));
    }
}
