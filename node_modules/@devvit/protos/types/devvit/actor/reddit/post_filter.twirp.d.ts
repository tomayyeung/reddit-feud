/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { PostFilterRequest, Response } from './post_filter.js';
export interface PostFilterTwirp<T extends TwirpContext = TwirpContext> {
    Filter(ctx: T, request: PostFilterRequest): Promise<Response>;
}
export declare enum PostFilterMethod {
    Filter = "Filter"
}
export declare const PostFilterMethodList: PostFilterMethod[];
export declare function createPostFilterServer<T extends TwirpContext = TwirpContext>(service: PostFilterTwirp<T>): TwirpServer<PostFilterTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=post_filter.twirp.d.ts.map