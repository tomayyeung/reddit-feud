import { ScheduledAction } from './action.js';
import { Empty } from '../../../google/protobuf/empty.js';
export class SchedulerHandlerClientJSON {
    constructor(rpc) {
        this.rpc = rpc;
        this.HandleScheduledAction.bind(this);
    }
    HandleScheduledAction(request) {
        const data = ScheduledAction.toJSON(request);
        const promise = this.rpc.request('devvit.actor.scheduler.SchedulerHandler', 'HandleScheduledAction', 'application/json', data);
        return promise.then((data) => Empty.fromJSON(data));
    }
}
export class SchedulerHandlerClientProtobuf {
    constructor(rpc) {
        this.rpc = rpc;
        this.HandleScheduledAction.bind(this);
    }
    HandleScheduledAction(request) {
        const data = ScheduledAction.encode(request).finish();
        const promise = this.rpc.request('devvit.actor.scheduler.SchedulerHandler', 'HandleScheduledAction', 'application/protobuf', data);
        return promise.then((data) => Empty.decode(data));
    }
}
