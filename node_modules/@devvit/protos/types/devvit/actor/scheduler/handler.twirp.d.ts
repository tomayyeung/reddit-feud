/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { ScheduledAction } from './action.js';
import { Empty } from '../../../google/protobuf/empty.js';
export interface SchedulerHandlerTwirp<T extends TwirpContext = TwirpContext> {
    HandleScheduledAction(ctx: T, request: ScheduledAction): Promise<Empty>;
}
export declare enum SchedulerHandlerMethod {
    HandleScheduledAction = "HandleScheduledAction"
}
export declare const SchedulerHandlerMethodList: SchedulerHandlerMethod[];
export declare function createSchedulerHandlerServer<T extends TwirpContext = TwirpContext>(service: SchedulerHandlerTwirp<T>): TwirpServer<SchedulerHandlerTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=handler.twirp.d.ts.map