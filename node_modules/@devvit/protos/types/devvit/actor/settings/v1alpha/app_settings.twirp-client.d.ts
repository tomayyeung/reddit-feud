import { GetFieldsRequest, GetFieldsResponse, ValidateFormRequest, ValidateFormResponse } from './shared.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface AppSettingsClient {
    GetAppSettingsFields(request: GetFieldsRequest): Promise<GetFieldsResponse>;
    ValidateAppForm(request: ValidateFormRequest): Promise<ValidateFormResponse>;
}
export declare class AppSettingsClientJSON implements AppSettingsClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    GetAppSettingsFields(request: GetFieldsRequest): Promise<GetFieldsResponse>;
    ValidateAppForm(request: ValidateFormRequest): Promise<ValidateFormResponse>;
}
export declare class AppSettingsClientProtobuf implements AppSettingsClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    GetAppSettingsFields(request: GetFieldsRequest): Promise<GetFieldsResponse>;
    ValidateAppForm(request: ValidateFormRequest): Promise<ValidateFormResponse>;
}
export {};
//# sourceMappingURL=app_settings.twirp-client.d.ts.map