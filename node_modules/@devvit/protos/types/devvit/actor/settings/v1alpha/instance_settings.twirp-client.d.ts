import { GetFieldsRequest, GetFieldsResponse, ValidateFormRequest, ValidateFormResponse } from './shared.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface InstanceSettingsClient {
    GetSettingsFields(request: GetFieldsRequest): Promise<GetFieldsResponse>;
    ValidateForm(request: ValidateFormRequest): Promise<ValidateFormResponse>;
}
export declare class InstanceSettingsClientJSON implements InstanceSettingsClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    GetSettingsFields(request: GetFieldsRequest): Promise<GetFieldsResponse>;
    ValidateForm(request: ValidateFormRequest): Promise<ValidateFormResponse>;
}
export declare class InstanceSettingsClientProtobuf implements InstanceSettingsClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    GetSettingsFields(request: GetFieldsRequest): Promise<GetFieldsResponse>;
    ValidateForm(request: ValidateFormRequest): Promise<ValidateFormResponse>;
}
export {};
//# sourceMappingURL=instance_settings.twirp-client.d.ts.map