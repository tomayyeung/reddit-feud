/**
 * #wrappertypes.ts
 *
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
import { Metadata } from "../../../../lib/Types.js";
import { BoolValue, DoubleValue, FloatValue, Int32Value, Int64Value, StringValue, UInt32Value, UInt64Value } from "../../../google/protobuf/wrappers.js";
export interface WrapperTypes {
    StringRequest(request: StringValue, metadata?: Metadata): Promise<StringValue>;
    BoolRequest(request: BoolValue, metadata?: Metadata): Promise<BoolValue>;
    Int32Request(request: Int32Value, metadata?: Metadata): Promise<Int32Value>;
    UInt32Request(request: UInt32Value, metadata?: Metadata): Promise<UInt32Value>;
    Int64Request(request: Int64Value, metadata?: Metadata): Promise<Int64Value>;
    UInt64Request(request: UInt64Value, metadata?: Metadata): Promise<UInt64Value>;
    FloatRequest(request: FloatValue, metadata?: Metadata): Promise<FloatValue>;
    DoubleRequest(request: DoubleValue, metadata?: Metadata): Promise<DoubleValue>;
}
export declare const WrapperTypesServiceName = "devvit.actor.test.WrapperTypes";
export declare class WrapperTypesClientImpl implements WrapperTypes {
    private readonly rpc;
    private readonly service;
    constructor(rpc: Rpc, opts?: {
        service?: string;
    });
    StringRequest(request: StringValue, metadata?: Metadata): Promise<StringValue>;
    BoolRequest(request: BoolValue, metadata?: Metadata): Promise<BoolValue>;
    Int32Request(request: Int32Value, metadata?: Metadata): Promise<Int32Value>;
    UInt32Request(request: UInt32Value, metadata?: Metadata): Promise<UInt32Value>;
    Int64Request(request: Int64Value, metadata?: Metadata): Promise<Int64Value>;
    UInt64Request(request: UInt64Value, metadata?: Metadata): Promise<UInt64Value>;
    FloatRequest(request: FloatValue, metadata?: Metadata): Promise<FloatValue>;
    DoubleRequest(request: DoubleValue, metadata?: Metadata): Promise<DoubleValue>;
}
export type WrapperTypesDefinition = typeof WrapperTypesDefinition;
export declare const WrapperTypesDefinition: {
    readonly name: "WrapperTypes";
    readonly fullName: "devvit.actor.test.WrapperTypes";
    readonly methods: {
        readonly stringRequest: {
            readonly name: "StringRequest";
            readonly requestType: {
                $type: "google.protobuf.StringValue";
                encode(message: StringValue, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): StringValue;
                fromJSON(object: any): StringValue;
                toJSON(message: StringValue): unknown;
                create(base?: {
                    value?: string;
                } | undefined): StringValue;
                fromPartial(object: {
                    value?: string;
                }): StringValue;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.StringValue";
                encode(message: StringValue, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): StringValue;
                fromJSON(object: any): StringValue;
                toJSON(message: StringValue): unknown;
                create(base?: {
                    value?: string;
                } | undefined): StringValue;
                fromPartial(object: {
                    value?: string;
                }): StringValue;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        readonly boolRequest: {
            readonly name: "BoolRequest";
            readonly requestType: {
                $type: "google.protobuf.BoolValue";
                encode(message: BoolValue, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): BoolValue;
                fromJSON(object: any): BoolValue;
                toJSON(message: BoolValue): unknown;
                create(base?: {
                    value?: boolean;
                } | undefined): BoolValue;
                fromPartial(object: {
                    value?: boolean;
                }): BoolValue;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.BoolValue";
                encode(message: BoolValue, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): BoolValue;
                fromJSON(object: any): BoolValue;
                toJSON(message: BoolValue): unknown;
                create(base?: {
                    value?: boolean;
                } | undefined): BoolValue;
                fromPartial(object: {
                    value?: boolean;
                }): BoolValue;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        readonly int32Request: {
            readonly name: "Int32Request";
            readonly requestType: {
                $type: "google.protobuf.Int32Value";
                encode(message: Int32Value, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Int32Value;
                fromJSON(object: any): Int32Value;
                toJSON(message: Int32Value): unknown;
                create(base?: {
                    value?: number;
                } | undefined): Int32Value;
                fromPartial(object: {
                    value?: number;
                }): Int32Value;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.Int32Value";
                encode(message: Int32Value, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Int32Value;
                fromJSON(object: any): Int32Value;
                toJSON(message: Int32Value): unknown;
                create(base?: {
                    value?: number;
                } | undefined): Int32Value;
                fromPartial(object: {
                    value?: number;
                }): Int32Value;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        readonly uInt32Request: {
            readonly name: "UInt32Request";
            readonly requestType: {
                $type: "google.protobuf.UInt32Value";
                encode(message: UInt32Value, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UInt32Value;
                fromJSON(object: any): UInt32Value;
                toJSON(message: UInt32Value): unknown;
                create(base?: {
                    value?: number;
                } | undefined): UInt32Value;
                fromPartial(object: {
                    value?: number;
                }): UInt32Value;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.UInt32Value";
                encode(message: UInt32Value, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UInt32Value;
                fromJSON(object: any): UInt32Value;
                toJSON(message: UInt32Value): unknown;
                create(base?: {
                    value?: number;
                } | undefined): UInt32Value;
                fromPartial(object: {
                    value?: number;
                }): UInt32Value;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        readonly int64Request: {
            readonly name: "Int64Request";
            readonly requestType: {
                $type: "google.protobuf.Int64Value";
                encode(message: Int64Value, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Int64Value;
                fromJSON(object: any): Int64Value;
                toJSON(message: Int64Value): unknown;
                create(base?: {
                    value?: number;
                } | undefined): Int64Value;
                fromPartial(object: {
                    value?: number;
                }): Int64Value;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.Int64Value";
                encode(message: Int64Value, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Int64Value;
                fromJSON(object: any): Int64Value;
                toJSON(message: Int64Value): unknown;
                create(base?: {
                    value?: number;
                } | undefined): Int64Value;
                fromPartial(object: {
                    value?: number;
                }): Int64Value;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        readonly uInt64Request: {
            readonly name: "UInt64Request";
            readonly requestType: {
                $type: "google.protobuf.UInt64Value";
                encode(message: UInt64Value, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UInt64Value;
                fromJSON(object: any): UInt64Value;
                toJSON(message: UInt64Value): unknown;
                create(base?: {
                    value?: number;
                } | undefined): UInt64Value;
                fromPartial(object: {
                    value?: number;
                }): UInt64Value;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.UInt64Value";
                encode(message: UInt64Value, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UInt64Value;
                fromJSON(object: any): UInt64Value;
                toJSON(message: UInt64Value): unknown;
                create(base?: {
                    value?: number;
                } | undefined): UInt64Value;
                fromPartial(object: {
                    value?: number;
                }): UInt64Value;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        readonly floatRequest: {
            readonly name: "FloatRequest";
            readonly requestType: {
                $type: "google.protobuf.FloatValue";
                encode(message: FloatValue, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): FloatValue;
                fromJSON(object: any): FloatValue;
                toJSON(message: FloatValue): unknown;
                create(base?: {
                    value?: number;
                } | undefined): FloatValue;
                fromPartial(object: {
                    value?: number;
                }): FloatValue;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.FloatValue";
                encode(message: FloatValue, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): FloatValue;
                fromJSON(object: any): FloatValue;
                toJSON(message: FloatValue): unknown;
                create(base?: {
                    value?: number;
                } | undefined): FloatValue;
                fromPartial(object: {
                    value?: number;
                }): FloatValue;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        readonly doubleRequest: {
            readonly name: "DoubleRequest";
            readonly requestType: {
                $type: "google.protobuf.DoubleValue";
                encode(message: DoubleValue, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): DoubleValue;
                fromJSON(object: any): DoubleValue;
                toJSON(message: DoubleValue): unknown;
                create(base?: {
                    value?: number;
                } | undefined): DoubleValue;
                fromPartial(object: {
                    value?: number;
                }): DoubleValue;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.DoubleValue";
                encode(message: DoubleValue, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): DoubleValue;
                fromJSON(object: any): DoubleValue;
                toJSON(message: DoubleValue): unknown;
                create(base?: {
                    value?: number;
                } | undefined): DoubleValue;
                fromPartial(object: {
                    value?: number;
                }): DoubleValue;
            };
            readonly responseStream: false;
            readonly options: {};
        };
    };
};
interface Rpc {
    request(service: string, method: string, data: Uint8Array, metadata?: Metadata): Promise<Uint8Array>;
}
export {};
//# sourceMappingURL=wrappertypes.d.ts.map