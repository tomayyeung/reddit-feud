import { StringValue, BoolValue, Int32Value, UInt32Value, Int64Value, UInt64Value, FloatValue, DoubleValue } from '../../../google/protobuf/wrappers.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface WrapperTypesClient {
    StringRequest(request: StringValue): Promise<StringValue>;
    BoolRequest(request: BoolValue): Promise<BoolValue>;
    Int32Request(request: Int32Value): Promise<Int32Value>;
    UInt32Request(request: UInt32Value): Promise<UInt32Value>;
    Int64Request(request: Int64Value): Promise<Int64Value>;
    UInt64Request(request: UInt64Value): Promise<UInt64Value>;
    FloatRequest(request: FloatValue): Promise<FloatValue>;
    DoubleRequest(request: DoubleValue): Promise<DoubleValue>;
}
export declare class WrapperTypesClientJSON implements WrapperTypesClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    StringRequest(request: StringValue): Promise<StringValue>;
    BoolRequest(request: BoolValue): Promise<BoolValue>;
    Int32Request(request: Int32Value): Promise<Int32Value>;
    UInt32Request(request: UInt32Value): Promise<UInt32Value>;
    Int64Request(request: Int64Value): Promise<Int64Value>;
    UInt64Request(request: UInt64Value): Promise<UInt64Value>;
    FloatRequest(request: FloatValue): Promise<FloatValue>;
    DoubleRequest(request: DoubleValue): Promise<DoubleValue>;
}
export declare class WrapperTypesClientProtobuf implements WrapperTypesClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    StringRequest(request: StringValue): Promise<StringValue>;
    BoolRequest(request: BoolValue): Promise<BoolValue>;
    Int32Request(request: Int32Value): Promise<Int32Value>;
    UInt32Request(request: UInt32Value): Promise<UInt32Value>;
    Int64Request(request: Int64Value): Promise<Int64Value>;
    UInt64Request(request: UInt64Value): Promise<UInt64Value>;
    FloatRequest(request: FloatValue): Promise<FloatValue>;
    DoubleRequest(request: DoubleValue): Promise<DoubleValue>;
}
export {};
//# sourceMappingURL=wrappertypes.twirp-client.d.ts.map