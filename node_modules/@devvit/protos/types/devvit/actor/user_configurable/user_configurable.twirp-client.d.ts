import { Empty } from '../../../google/protobuf/empty.js';
import { ConfigForm, FormResponse } from './user_configurable.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface UserConfigurableClient {
    RenderForm(request: Empty): Promise<ConfigForm>;
    HandleFormResponse(request: ConfigForm): Promise<FormResponse>;
}
export declare class UserConfigurableClientJSON implements UserConfigurableClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    RenderForm(request: Empty): Promise<ConfigForm>;
    HandleFormResponse(request: ConfigForm): Promise<FormResponse>;
}
export declare class UserConfigurableClientProtobuf implements UserConfigurableClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    RenderForm(request: Empty): Promise<ConfigForm>;
    HandleFormResponse(request: ConfigForm): Promise<FormResponse>;
}
export {};
//# sourceMappingURL=user_configurable.twirp-client.d.ts.map