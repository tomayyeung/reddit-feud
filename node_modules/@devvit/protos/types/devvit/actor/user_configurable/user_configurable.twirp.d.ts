/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { Empty } from '../../../google/protobuf/empty.js';
import { ConfigForm, FormResponse } from './user_configurable.js';
export interface UserConfigurableTwirp<T extends TwirpContext = TwirpContext> {
    RenderForm(ctx: T, request: Empty): Promise<ConfigForm>;
    HandleFormResponse(ctx: T, request: ConfigForm): Promise<FormResponse>;
}
export declare enum UserConfigurableMethod {
    RenderForm = "RenderForm",
    HandleFormResponse = "HandleFormResponse"
}
export declare const UserConfigurableMethodList: UserConfigurableMethod[];
export declare function createUserConfigurableServer<T extends TwirpContext = TwirpContext>(service: UserConfigurableTwirp<T>): TwirpServer<UserConfigurableTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=user_configurable.twirp.d.ts.map