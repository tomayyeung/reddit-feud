/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { GetProfileRequest, GetProfileResponse } from './debug.js';
export interface DevvitProfilerTwirp<T extends TwirpContext = TwirpContext> {
    GetProfile(ctx: T, request: GetProfileRequest): Promise<GetProfileResponse>;
}
export declare enum DevvitProfilerMethod {
    GetProfile = "GetProfile"
}
export declare const DevvitProfilerMethodList: DevvitProfilerMethod[];
export declare function createDevvitProfilerServer<T extends TwirpContext = TwirpContext>(service: DevvitProfilerTwirp<T>): TwirpServer<DevvitProfilerTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=debug.twirp.d.ts.map