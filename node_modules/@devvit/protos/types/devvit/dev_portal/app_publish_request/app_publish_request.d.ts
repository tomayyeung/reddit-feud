/**
 * #app_publish_request.ts
 *
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
import { AppInfo } from "../app/info/app_info.js";
import { AppVersionInfo } from "../app_version/info/app_version_info.js";
import { Redditor } from "../reddit/redditor.js";
import { AppPublishRequestNote } from "./note/app_publish_request_note.js";
import { AppPublishRequestReview } from "./review/app_publish_request_review.js";
export declare enum AppPublishRequestStatus {
    APPROVED = 0,
    DENIED = 1,
    OBSOLETE = 2,
    PENDING = 3,
    WITHDRAWN = 4,
    UNRECOGNIZED = -1
}
export declare function appPublishRequestStatusFromJSON(object: any): AppPublishRequestStatus;
export declare function appPublishRequestStatusToJSON(object: AppPublishRequestStatus): number;
export declare enum AppPublishRequestVisibility {
    PUBLIC = 0,
    UNLISTED = 1,
    UNRECOGNIZED = -1
}
export declare function appPublishRequestVisibilityFromJSON(object: any): AppPublishRequestVisibility;
export declare function appPublishRequestVisibilityToJSON(object: AppPublishRequestVisibility): number;
export interface FullPublishRequestInfo {
    id: string;
    createdAt?: Date | undefined;
    createdBy?: Redditor | undefined;
    status: AppPublishRequestStatus;
    visibility: AppPublishRequestVisibility;
    appVersionInfo?: AppVersionInfo | undefined;
    appInfo?: AppInfo | undefined;
    reviews: AppPublishRequestReview[];
    notes: AppPublishRequestNote[];
    /** the number of subreddit the target app is installed to */
    appInstallationCount?: number | undefined;
}
export interface MultiplePublishRequestInfos {
    requests: FullPublishRequestInfo[];
    pagination?: MultiplePublishRequestInfos_PageInfo | undefined;
}
export interface MultiplePublishRequestInfos_PageInfo {
    /** current page number (min 1) */
    page: number;
    /** items per page */
    pageSize: number;
    /** total number of items for the current search criteria */
    total: number;
}
export interface AppPRCreateRequest {
    appVersionId?: string | undefined;
    /** e.g. "comment-nuke@4.2.0" */
    appSlugAndVersionNumber?: string | undefined;
    visibility: AppPublishRequestVisibility;
}
export interface AppPRUpdateRequest {
    appVersionId?: string | undefined;
    publishRequestId?: string | undefined;
    /** e.g. "comment-nuke@4.2.0" */
    appSlugAndVersionNumber?: string | undefined;
    status: AppPublishRequestStatus;
}
export interface AppPRGetRequest {
    appVersionId?: string | undefined;
    publishRequestId?: string | undefined;
    /** e.g. "comment-nuke@4.2.0" */
    appSlugAndVersionNumber?: string | undefined;
}
export interface AppPRFindManyRequest {
    /** unique App Id */
    appId?: string | undefined;
    /** full match by App name (not a slug) */
    appName?: string | undefined;
    /** full match by App slug */
    appSlug?: string | undefined;
    /** partial match by App slug or name */
    searchTerm?: string | undefined;
    pagination?: AppPRFindManyRequest_PaginationInfo | undefined;
    /** how the results should be sorted */
    sort?: AppPRFindManyRequest_SortInfo | undefined;
    /** filter PRs by status (an "OR" rule is applied if more than one status is specified) */
    statuses: AppPublishRequestStatus[];
}
export interface AppPRFindManyRequest_PaginationInfo {
    /** page number (min 1) */
    page: number;
    /** items per page */
    pageSize: number;
}
export interface AppPRFindManyRequest_SortInfo {
    /** field name to sort by */
    field: string;
    /** direction (true = ascending, false = descending) */
    asc: boolean;
}
export declare const FullPublishRequestInfo: {
    $type: "devvit.dev_portal.app_publish_request.FullPublishRequestInfo";
    encode(message: FullPublishRequestInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FullPublishRequestInfo;
    fromJSON(object: any): FullPublishRequestInfo;
    toJSON(message: FullPublishRequestInfo): unknown;
    create(base?: DeepPartial<FullPublishRequestInfo>): FullPublishRequestInfo;
    fromPartial(object: DeepPartial<FullPublishRequestInfo>): FullPublishRequestInfo;
};
export declare const MultiplePublishRequestInfos: {
    $type: "devvit.dev_portal.app_publish_request.MultiplePublishRequestInfos";
    encode(message: MultiplePublishRequestInfos, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MultiplePublishRequestInfos;
    fromJSON(object: any): MultiplePublishRequestInfos;
    toJSON(message: MultiplePublishRequestInfos): unknown;
    create(base?: DeepPartial<MultiplePublishRequestInfos>): MultiplePublishRequestInfos;
    fromPartial(object: DeepPartial<MultiplePublishRequestInfos>): MultiplePublishRequestInfos;
};
export declare const MultiplePublishRequestInfos_PageInfo: {
    $type: "devvit.dev_portal.app_publish_request.MultiplePublishRequestInfos.PageInfo";
    encode(message: MultiplePublishRequestInfos_PageInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MultiplePublishRequestInfos_PageInfo;
    fromJSON(object: any): MultiplePublishRequestInfos_PageInfo;
    toJSON(message: MultiplePublishRequestInfos_PageInfo): unknown;
    create(base?: DeepPartial<MultiplePublishRequestInfos_PageInfo>): MultiplePublishRequestInfos_PageInfo;
    fromPartial(object: DeepPartial<MultiplePublishRequestInfos_PageInfo>): MultiplePublishRequestInfos_PageInfo;
};
export declare const AppPRCreateRequest: {
    $type: "devvit.dev_portal.app_publish_request.AppPRCreateRequest";
    encode(message: AppPRCreateRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AppPRCreateRequest;
    fromJSON(object: any): AppPRCreateRequest;
    toJSON(message: AppPRCreateRequest): unknown;
    create(base?: DeepPartial<AppPRCreateRequest>): AppPRCreateRequest;
    fromPartial(object: DeepPartial<AppPRCreateRequest>): AppPRCreateRequest;
};
export declare const AppPRUpdateRequest: {
    $type: "devvit.dev_portal.app_publish_request.AppPRUpdateRequest";
    encode(message: AppPRUpdateRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AppPRUpdateRequest;
    fromJSON(object: any): AppPRUpdateRequest;
    toJSON(message: AppPRUpdateRequest): unknown;
    create(base?: DeepPartial<AppPRUpdateRequest>): AppPRUpdateRequest;
    fromPartial(object: DeepPartial<AppPRUpdateRequest>): AppPRUpdateRequest;
};
export declare const AppPRGetRequest: {
    $type: "devvit.dev_portal.app_publish_request.AppPRGetRequest";
    encode(message: AppPRGetRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AppPRGetRequest;
    fromJSON(object: any): AppPRGetRequest;
    toJSON(message: AppPRGetRequest): unknown;
    create(base?: DeepPartial<AppPRGetRequest>): AppPRGetRequest;
    fromPartial(object: DeepPartial<AppPRGetRequest>): AppPRGetRequest;
};
export declare const AppPRFindManyRequest: {
    $type: "devvit.dev_portal.app_publish_request.AppPRFindManyRequest";
    encode(message: AppPRFindManyRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AppPRFindManyRequest;
    fromJSON(object: any): AppPRFindManyRequest;
    toJSON(message: AppPRFindManyRequest): unknown;
    create(base?: DeepPartial<AppPRFindManyRequest>): AppPRFindManyRequest;
    fromPartial(object: DeepPartial<AppPRFindManyRequest>): AppPRFindManyRequest;
};
export declare const AppPRFindManyRequest_PaginationInfo: {
    $type: "devvit.dev_portal.app_publish_request.AppPRFindManyRequest.PaginationInfo";
    encode(message: AppPRFindManyRequest_PaginationInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AppPRFindManyRequest_PaginationInfo;
    fromJSON(object: any): AppPRFindManyRequest_PaginationInfo;
    toJSON(message: AppPRFindManyRequest_PaginationInfo): unknown;
    create(base?: DeepPartial<AppPRFindManyRequest_PaginationInfo>): AppPRFindManyRequest_PaginationInfo;
    fromPartial(object: DeepPartial<AppPRFindManyRequest_PaginationInfo>): AppPRFindManyRequest_PaginationInfo;
};
export declare const AppPRFindManyRequest_SortInfo: {
    $type: "devvit.dev_portal.app_publish_request.AppPRFindManyRequest.SortInfo";
    encode(message: AppPRFindManyRequest_SortInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AppPRFindManyRequest_SortInfo;
    fromJSON(object: any): AppPRFindManyRequest_SortInfo;
    toJSON(message: AppPRFindManyRequest_SortInfo): unknown;
    create(base?: DeepPartial<AppPRFindManyRequest_SortInfo>): AppPRFindManyRequest_SortInfo;
    fromPartial(object: DeepPartial<AppPRFindManyRequest_SortInfo>): AppPRFindManyRequest_SortInfo;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=app_publish_request.d.ts.map