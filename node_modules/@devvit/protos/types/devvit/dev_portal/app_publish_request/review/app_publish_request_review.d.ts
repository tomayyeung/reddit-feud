/**
 * #app_publish_request_review.ts
 *
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
import { Redditor } from "../../reddit/redditor.js";
export declare enum AppPublishRequestReviewDecision {
    APPROVED = 0,
    DENIED = 1,
    OBSOLETE = 2,
    UNRECOGNIZED = -1
}
export declare function appPublishRequestReviewDecisionFromJSON(object: any): AppPublishRequestReviewDecision;
export declare function appPublishRequestReviewDecisionToJSON(object: AppPublishRequestReviewDecision): number;
export interface AppPublishRequestReview {
    id: string;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    reviewer?: Redditor | undefined;
    decision: AppPublishRequestReviewDecision;
}
export interface AppPRSetReviewDecisionRequest {
    appPublishRequestId: string;
    decision: AppPublishRequestReviewDecision;
}
export declare const AppPublishRequestReview: {
    $type: "devvit.dev_portal.app_publish_request.review.AppPublishRequestReview";
    encode(message: AppPublishRequestReview, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AppPublishRequestReview;
    fromJSON(object: any): AppPublishRequestReview;
    toJSON(message: AppPublishRequestReview): unknown;
    create(base?: DeepPartial<AppPublishRequestReview>): AppPublishRequestReview;
    fromPartial(object: DeepPartial<AppPublishRequestReview>): AppPublishRequestReview;
};
export declare const AppPRSetReviewDecisionRequest: {
    $type: "devvit.dev_portal.app_publish_request.review.AppPRSetReviewDecisionRequest";
    encode(message: AppPRSetReviewDecisionRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AppPRSetReviewDecisionRequest;
    fromJSON(object: any): AppPRSetReviewDecisionRequest;
    toJSON(message: AppPRSetReviewDecisionRequest): unknown;
    create(base?: DeepPartial<AppPRSetReviewDecisionRequest>): AppPRSetReviewDecisionRequest;
    fromPartial(object: DeepPartial<AppPRSetReviewDecisionRequest>): AppPRSetReviewDecisionRequest;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=app_publish_request_review.d.ts.map