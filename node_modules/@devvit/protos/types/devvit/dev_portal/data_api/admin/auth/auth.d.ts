/**
 * #auth.ts
 *
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
import { Duration } from "../../../../../google/protobuf/duration.js";
import { DataToken } from "../../../../data/api/v1alpha/admin.js";
export interface CreateDataTokenRequest {
    organizationName: string;
    expiresIn?: Duration | undefined;
}
export interface CreateDataTokenResponse {
    token: string;
    expiresAt?: Date | undefined;
}
export interface GetDataTokenByIdRequest {
    id: string;
}
export interface GetDataTokenByIdResponse {
    token?: DataToken | undefined;
}
export interface GetDataTokensByOrganizationNameRequest {
    organizationName: string;
}
export interface GetDataTokensByOrganizationNameResponse {
    tokens: DataToken[];
}
export interface RevokeDataTokenByIdRequest {
    tokenId: string;
}
export interface RevokeDataTokenByIdResponse {
}
export declare const CreateDataTokenRequest: {
    $type: "devvit.dev_portal.data_api.admin.auth.CreateDataTokenRequest";
    encode(message: CreateDataTokenRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CreateDataTokenRequest;
    fromJSON(object: any): CreateDataTokenRequest;
    toJSON(message: CreateDataTokenRequest): unknown;
    create(base?: DeepPartial<CreateDataTokenRequest>): CreateDataTokenRequest;
    fromPartial(object: DeepPartial<CreateDataTokenRequest>): CreateDataTokenRequest;
};
export declare const CreateDataTokenResponse: {
    $type: "devvit.dev_portal.data_api.admin.auth.CreateDataTokenResponse";
    encode(message: CreateDataTokenResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CreateDataTokenResponse;
    fromJSON(object: any): CreateDataTokenResponse;
    toJSON(message: CreateDataTokenResponse): unknown;
    create(base?: DeepPartial<CreateDataTokenResponse>): CreateDataTokenResponse;
    fromPartial(object: DeepPartial<CreateDataTokenResponse>): CreateDataTokenResponse;
};
export declare const GetDataTokenByIdRequest: {
    $type: "devvit.dev_portal.data_api.admin.auth.GetDataTokenByIdRequest";
    encode(message: GetDataTokenByIdRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetDataTokenByIdRequest;
    fromJSON(object: any): GetDataTokenByIdRequest;
    toJSON(message: GetDataTokenByIdRequest): unknown;
    create(base?: DeepPartial<GetDataTokenByIdRequest>): GetDataTokenByIdRequest;
    fromPartial(object: DeepPartial<GetDataTokenByIdRequest>): GetDataTokenByIdRequest;
};
export declare const GetDataTokenByIdResponse: {
    $type: "devvit.dev_portal.data_api.admin.auth.GetDataTokenByIdResponse";
    encode(message: GetDataTokenByIdResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetDataTokenByIdResponse;
    fromJSON(object: any): GetDataTokenByIdResponse;
    toJSON(message: GetDataTokenByIdResponse): unknown;
    create(base?: DeepPartial<GetDataTokenByIdResponse>): GetDataTokenByIdResponse;
    fromPartial(object: DeepPartial<GetDataTokenByIdResponse>): GetDataTokenByIdResponse;
};
export declare const GetDataTokensByOrganizationNameRequest: {
    $type: "devvit.dev_portal.data_api.admin.auth.GetDataTokensByOrganizationNameRequest";
    encode(message: GetDataTokensByOrganizationNameRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetDataTokensByOrganizationNameRequest;
    fromJSON(object: any): GetDataTokensByOrganizationNameRequest;
    toJSON(message: GetDataTokensByOrganizationNameRequest): unknown;
    create(base?: DeepPartial<GetDataTokensByOrganizationNameRequest>): GetDataTokensByOrganizationNameRequest;
    fromPartial(object: DeepPartial<GetDataTokensByOrganizationNameRequest>): GetDataTokensByOrganizationNameRequest;
};
export declare const GetDataTokensByOrganizationNameResponse: {
    $type: "devvit.dev_portal.data_api.admin.auth.GetDataTokensByOrganizationNameResponse";
    encode(message: GetDataTokensByOrganizationNameResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetDataTokensByOrganizationNameResponse;
    fromJSON(object: any): GetDataTokensByOrganizationNameResponse;
    toJSON(message: GetDataTokensByOrganizationNameResponse): unknown;
    create(base?: DeepPartial<GetDataTokensByOrganizationNameResponse>): GetDataTokensByOrganizationNameResponse;
    fromPartial(object: DeepPartial<GetDataTokensByOrganizationNameResponse>): GetDataTokensByOrganizationNameResponse;
};
export declare const RevokeDataTokenByIdRequest: {
    $type: "devvit.dev_portal.data_api.admin.auth.RevokeDataTokenByIdRequest";
    encode(message: RevokeDataTokenByIdRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): RevokeDataTokenByIdRequest;
    fromJSON(object: any): RevokeDataTokenByIdRequest;
    toJSON(message: RevokeDataTokenByIdRequest): unknown;
    create(base?: DeepPartial<RevokeDataTokenByIdRequest>): RevokeDataTokenByIdRequest;
    fromPartial(object: DeepPartial<RevokeDataTokenByIdRequest>): RevokeDataTokenByIdRequest;
};
export declare const RevokeDataTokenByIdResponse: {
    $type: "devvit.dev_portal.data_api.admin.auth.RevokeDataTokenByIdResponse";
    encode(_: RevokeDataTokenByIdResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): RevokeDataTokenByIdResponse;
    fromJSON(_: any): RevokeDataTokenByIdResponse;
    toJSON(_: RevokeDataTokenByIdResponse): unknown;
    create(base?: DeepPartial<RevokeDataTokenByIdResponse>): RevokeDataTokenByIdResponse;
    fromPartial(_: DeepPartial<RevokeDataTokenByIdResponse>): RevokeDataTokenByIdResponse;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=auth.d.ts.map