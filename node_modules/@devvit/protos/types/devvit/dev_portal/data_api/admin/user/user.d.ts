/**
 * #user.ts
 *
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
export interface User {
    t2id: string;
    orgId: string;
    username: string;
}
export interface AddUsersToOrgRequest {
    orgId: string;
    usernames: string[];
}
export interface AddUsersToOrgResponse {
    users: User[];
}
export interface GetUsersByOrgIdRequest {
    id: string;
}
export interface GetUsersByOrgIdResponse {
    users: User[];
}
export interface GetUserByIdRequest {
    t2id: string;
}
export interface GetUserByIdResponse {
    user?: User | undefined;
}
export interface DeleteUserRequest {
    t2id: string;
}
export interface DeleteUserResponse {
    user?: User | undefined;
}
export declare const User: {
    $type: "devvit.dev_portal.data_api.admin.user.User";
    encode(message: User, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): User;
    fromJSON(object: any): User;
    toJSON(message: User): unknown;
    create(base?: DeepPartial<User>): User;
    fromPartial(object: DeepPartial<User>): User;
};
export declare const AddUsersToOrgRequest: {
    $type: "devvit.dev_portal.data_api.admin.user.AddUsersToOrgRequest";
    encode(message: AddUsersToOrgRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AddUsersToOrgRequest;
    fromJSON(object: any): AddUsersToOrgRequest;
    toJSON(message: AddUsersToOrgRequest): unknown;
    create(base?: DeepPartial<AddUsersToOrgRequest>): AddUsersToOrgRequest;
    fromPartial(object: DeepPartial<AddUsersToOrgRequest>): AddUsersToOrgRequest;
};
export declare const AddUsersToOrgResponse: {
    $type: "devvit.dev_portal.data_api.admin.user.AddUsersToOrgResponse";
    encode(message: AddUsersToOrgResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AddUsersToOrgResponse;
    fromJSON(object: any): AddUsersToOrgResponse;
    toJSON(message: AddUsersToOrgResponse): unknown;
    create(base?: DeepPartial<AddUsersToOrgResponse>): AddUsersToOrgResponse;
    fromPartial(object: DeepPartial<AddUsersToOrgResponse>): AddUsersToOrgResponse;
};
export declare const GetUsersByOrgIdRequest: {
    $type: "devvit.dev_portal.data_api.admin.user.GetUsersByOrgIdRequest";
    encode(message: GetUsersByOrgIdRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetUsersByOrgIdRequest;
    fromJSON(object: any): GetUsersByOrgIdRequest;
    toJSON(message: GetUsersByOrgIdRequest): unknown;
    create(base?: DeepPartial<GetUsersByOrgIdRequest>): GetUsersByOrgIdRequest;
    fromPartial(object: DeepPartial<GetUsersByOrgIdRequest>): GetUsersByOrgIdRequest;
};
export declare const GetUsersByOrgIdResponse: {
    $type: "devvit.dev_portal.data_api.admin.user.GetUsersByOrgIdResponse";
    encode(message: GetUsersByOrgIdResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetUsersByOrgIdResponse;
    fromJSON(object: any): GetUsersByOrgIdResponse;
    toJSON(message: GetUsersByOrgIdResponse): unknown;
    create(base?: DeepPartial<GetUsersByOrgIdResponse>): GetUsersByOrgIdResponse;
    fromPartial(object: DeepPartial<GetUsersByOrgIdResponse>): GetUsersByOrgIdResponse;
};
export declare const GetUserByIdRequest: {
    $type: "devvit.dev_portal.data_api.admin.user.GetUserByIdRequest";
    encode(message: GetUserByIdRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetUserByIdRequest;
    fromJSON(object: any): GetUserByIdRequest;
    toJSON(message: GetUserByIdRequest): unknown;
    create(base?: DeepPartial<GetUserByIdRequest>): GetUserByIdRequest;
    fromPartial(object: DeepPartial<GetUserByIdRequest>): GetUserByIdRequest;
};
export declare const GetUserByIdResponse: {
    $type: "devvit.dev_portal.data_api.admin.user.GetUserByIdResponse";
    encode(message: GetUserByIdResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetUserByIdResponse;
    fromJSON(object: any): GetUserByIdResponse;
    toJSON(message: GetUserByIdResponse): unknown;
    create(base?: DeepPartial<GetUserByIdResponse>): GetUserByIdResponse;
    fromPartial(object: DeepPartial<GetUserByIdResponse>): GetUserByIdResponse;
};
export declare const DeleteUserRequest: {
    $type: "devvit.dev_portal.data_api.admin.user.DeleteUserRequest";
    encode(message: DeleteUserRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DeleteUserRequest;
    fromJSON(object: any): DeleteUserRequest;
    toJSON(message: DeleteUserRequest): unknown;
    create(base?: DeepPartial<DeleteUserRequest>): DeleteUserRequest;
    fromPartial(object: DeepPartial<DeleteUserRequest>): DeleteUserRequest;
};
export declare const DeleteUserResponse: {
    $type: "devvit.dev_portal.data_api.admin.user.DeleteUserResponse";
    encode(message: DeleteUserResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DeleteUserResponse;
    fromJSON(object: any): DeleteUserResponse;
    toJSON(message: DeleteUserResponse): unknown;
    create(base?: DeepPartial<DeleteUserResponse>): DeleteUserResponse;
    fromPartial(object: DeepPartial<DeleteUserResponse>): DeleteUserResponse;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=user.d.ts.map