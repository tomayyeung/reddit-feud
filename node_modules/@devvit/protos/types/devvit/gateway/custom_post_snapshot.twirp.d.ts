/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { CustomPostSnapshotRequest } from './custom_post_snapshot.js';
import { CustomPostSnapshot } from '../gql/snapshot.js';
export interface CustomPostSnapshotResolverTwirp<T extends TwirpContext = TwirpContext> {
    GetCustomPostSnapshot(ctx: T, request: CustomPostSnapshotRequest): Promise<CustomPostSnapshot>;
}
export declare enum CustomPostSnapshotResolverMethod {
    GetCustomPostSnapshot = "GetCustomPostSnapshot"
}
export declare const CustomPostSnapshotResolverMethodList: CustomPostSnapshotResolverMethod[];
export declare function createCustomPostSnapshotResolverServer<T extends TwirpContext = TwirpContext>(service: CustomPostSnapshotResolverTwirp<T>): TwirpServer<CustomPostSnapshotResolverTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=custom_post_snapshot.twirp.d.ts.map