import { SubredditMetadataRequest } from './resolvers.js';
import { DevvitSubredditMetadata } from '../gql/subreddit_metadata.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface SubredditMetadataResolverClient {
    GetSubredditMetadata(request: SubredditMetadataRequest): Promise<DevvitSubredditMetadata>;
}
export declare class SubredditMetadataResolverClientJSON implements SubredditMetadataResolverClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    GetSubredditMetadata(request: SubredditMetadataRequest): Promise<DevvitSubredditMetadata>;
}
export declare class SubredditMetadataResolverClientProtobuf implements SubredditMetadataResolverClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    GetSubredditMetadata(request: SubredditMetadataRequest): Promise<DevvitSubredditMetadata>;
}
export {};
//# sourceMappingURL=resolvers.twirp-client.d.ts.map