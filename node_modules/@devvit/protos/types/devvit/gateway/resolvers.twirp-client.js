import { SubredditMetadataRequest } from './resolvers.js';
import { DevvitSubredditMetadata } from '../gql/subreddit_metadata.js';
export class SubredditMetadataResolverClientJSON {
    constructor(rpc) {
        this.rpc = rpc;
        this.GetSubredditMetadata.bind(this);
    }
    GetSubredditMetadata(request) {
        const data = SubredditMetadataRequest.toJSON(request);
        const promise = this.rpc.request('devvit.gateway.SubredditMetadataResolver', 'GetSubredditMetadata', 'application/json', data);
        return promise.then((data) => DevvitSubredditMetadata.fromJSON(data));
    }
}
export class SubredditMetadataResolverClientProtobuf {
    constructor(rpc) {
        this.rpc = rpc;
        this.GetSubredditMetadata.bind(this);
    }
    GetSubredditMetadata(request) {
        const data = SubredditMetadataRequest.encode(request).finish();
        const promise = this.rpc.request('devvit.gateway.SubredditMetadataResolver', 'GetSubredditMetadata', 'application/protobuf', data);
        return promise.then((data) => DevvitSubredditMetadata.decode(data));
    }
}
