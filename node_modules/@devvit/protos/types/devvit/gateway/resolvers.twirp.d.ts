/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { SubredditMetadataRequest } from './resolvers.js';
import { DevvitSubredditMetadata } from '../gql/subreddit_metadata.js';
export interface SubredditMetadataResolverTwirp<T extends TwirpContext = TwirpContext> {
    GetSubredditMetadata(ctx: T, request: SubredditMetadataRequest): Promise<DevvitSubredditMetadata>;
}
export declare enum SubredditMetadataResolverMethod {
    GetSubredditMetadata = "GetSubredditMetadata"
}
export declare const SubredditMetadataResolverMethodList: SubredditMetadataResolverMethod[];
export declare function createSubredditMetadataResolverServer<T extends TwirpContext = TwirpContext>(service: SubredditMetadataResolverTwirp<T>): TwirpServer<SubredditMetadataResolverTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=resolvers.twirp.d.ts.map