/**
 * #order.ts
 *
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
import { Environment } from "./common.js";
import { Product } from "./product.js";
export declare enum OrderStatus {
    ORDER_STATUS_UNSPECIFIED = 0,
    ORDER_STATUS_NEW = 1,
    ORDER_STATUS_CREATED = 2,
    ORDER_STATUS_PAID = 3,
    ORDER_STATUS_DELIVERED = 4,
    ORDER_STATUS_CANCELED = 5,
    ORDER_STATUS_REVERTED = 6,
    UNRECOGNIZED = -1
}
export declare function orderStatusFromJSON(object: any): OrderStatus;
export declare function orderStatusToJSON(object: OrderStatus): number;
/** Order represents a purchase made by a user */
export interface Order {
    /** a unique identifier for the order */
    id: string;
    /** where the order is in its lifecycle */
    status: OrderStatus;
    /** when the order was created */
    createdAt?: Date | undefined;
    /** when the order was last updated */
    updatedAt?: Date | undefined;
    /** the products that were ordered */
    products: Product[];
    /** whether or not the order was placed in the development sandbox or production */
    environment: Environment;
    /** user-defined metadata about the order */
    metadata: {
        [key: string]: string;
    };
}
export interface Order_MetadataEntry {
    key: string;
    value: string;
}
export declare const Order: {
    $type: "devvit.payments.v1alpha.Order";
    encode(message: Order, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Order;
    fromJSON(object: any): Order;
    toJSON(message: Order): unknown;
    create(base?: DeepPartial<Order>): Order;
    fromPartial(object: DeepPartial<Order>): Order;
};
export declare const Order_MetadataEntry: {
    $type: "devvit.payments.v1alpha.Order.MetadataEntry";
    encode(message: Order_MetadataEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Order_MetadataEntry;
    fromJSON(object: any): Order_MetadataEntry;
    toJSON(message: Order_MetadataEntry): unknown;
    create(base?: DeepPartial<Order_MetadataEntry>): Order_MetadataEntry;
    fromPartial(object: DeepPartial<Order_MetadataEntry>): Order_MetadataEntry;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=order.d.ts.map