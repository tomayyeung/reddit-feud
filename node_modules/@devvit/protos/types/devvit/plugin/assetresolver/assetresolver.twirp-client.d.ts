import { GetAssetURLRequest, GetAssetURLResponse, GetMultipleAssetURLsRequest, GetMultipleAssetURLsResponse } from './assetresolver.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface AssetResolverClient {
    GetAssetURL(request: GetAssetURLRequest): Promise<GetAssetURLResponse>;
    GetAssetURLs(request: GetMultipleAssetURLsRequest): Promise<GetMultipleAssetURLsResponse>;
}
export declare class AssetResolverClientJSON implements AssetResolverClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    GetAssetURL(request: GetAssetURLRequest): Promise<GetAssetURLResponse>;
    GetAssetURLs(request: GetMultipleAssetURLsRequest): Promise<GetMultipleAssetURLsResponse>;
}
export declare class AssetResolverClientProtobuf implements AssetResolverClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    GetAssetURL(request: GetAssetURLRequest): Promise<GetAssetURLResponse>;
    GetAssetURLs(request: GetMultipleAssetURLsRequest): Promise<GetMultipleAssetURLsResponse>;
}
export {};
//# sourceMappingURL=assetresolver.twirp-client.d.ts.map