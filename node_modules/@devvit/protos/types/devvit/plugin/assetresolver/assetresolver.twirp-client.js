import { GetAssetURLRequest, GetAssetURLResponse, GetMultipleAssetURLsRequest, GetMultipleAssetURLsResponse, } from './assetresolver.js';
export class AssetResolverClientJSON {
    constructor(rpc) {
        this.rpc = rpc;
        this.GetAssetURL.bind(this);
        this.GetAssetURLs.bind(this);
    }
    GetAssetURL(request) {
        const data = GetAssetURLRequest.toJSON(request);
        const promise = this.rpc.request('devvit.plugin.assetresolver.AssetResolver', 'GetAssetURL', 'application/json', data);
        return promise.then((data) => GetAssetURLResponse.fromJSON(data));
    }
    GetAssetURLs(request) {
        const data = GetMultipleAssetURLsRequest.toJSON(request);
        const promise = this.rpc.request('devvit.plugin.assetresolver.AssetResolver', 'GetAssetURLs', 'application/json', data);
        return promise.then((data) => GetMultipleAssetURLsResponse.fromJSON(data));
    }
}
export class AssetResolverClientProtobuf {
    constructor(rpc) {
        this.rpc = rpc;
        this.GetAssetURL.bind(this);
        this.GetAssetURLs.bind(this);
    }
    GetAssetURL(request) {
        const data = GetAssetURLRequest.encode(request).finish();
        const promise = this.rpc.request('devvit.plugin.assetresolver.AssetResolver', 'GetAssetURL', 'application/protobuf', data);
        return promise.then((data) => GetAssetURLResponse.decode(data));
    }
    GetAssetURLs(request) {
        const data = GetMultipleAssetURLsRequest.encode(request).finish();
        const promise = this.rpc.request('devvit.plugin.assetresolver.AssetResolver', 'GetAssetURLs', 'application/protobuf', data);
        return promise.then((data) => GetMultipleAssetURLsResponse.decode(data));
    }
}
