import { CompileParams } from '../buildpack/buildpack_common.js';
import { BuildResponse } from './builder.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface BuilderClient {
    Build(request: CompileParams): Promise<BuildResponse>;
    Watch(request: CompileParams): Promise<BuildResponse>;
}
export declare class BuilderClientJSON implements BuilderClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Build(request: CompileParams): Promise<BuildResponse>;
    Watch(request: CompileParams): Promise<BuildResponse>;
}
export declare class BuilderClientProtobuf implements BuilderClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Build(request: CompileParams): Promise<BuildResponse>;
    Watch(request: CompileParams): Promise<BuildResponse>;
}
export {};
//# sourceMappingURL=builder.twirp-client.d.ts.map