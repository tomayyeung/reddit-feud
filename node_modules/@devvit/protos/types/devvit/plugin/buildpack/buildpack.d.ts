/**
 * #buildpack.ts
 *
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
import { Observable } from "rxjs";
import { Metadata } from "../../../../lib/Types.js";
import { CompileParams, CompileResponse } from "./buildpack_common.js";
export interface BuildPack {
    /** Compiles user code into an output bundle, including an audit trail, if desired. */
    Compile(request: CompileParams, metadata?: Metadata): Promise<CompileResponse>;
    /** Automatically rebundle when input files change. */
    Watch(request: CompileParams, metadata?: Metadata): Observable<CompileResponse>;
}
export declare const BuildPackServiceName = "devvit.plugin.buildpack.BuildPack";
export declare class BuildPackClientImpl implements BuildPack {
    private readonly rpc;
    private readonly service;
    constructor(rpc: Rpc, opts?: {
        service?: string;
    });
    Compile(request: CompileParams, metadata?: Metadata): Promise<CompileResponse>;
    Watch(request: CompileParams, metadata?: Metadata): Observable<CompileResponse>;
}
export type BuildPackDefinition = typeof BuildPackDefinition;
export declare const BuildPackDefinition: {
    readonly name: "BuildPack";
    readonly fullName: "devvit.plugin.buildpack.BuildPack";
    readonly methods: {
        /** Compiles user code into an output bundle, including an audit trail, if desired. */
        readonly compile: {
            readonly name: "Compile";
            readonly requestType: {
                $type: "devvit.plugin.buildpack.CompileParams";
                encode(message: CompileParams, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): CompileParams;
                fromJSON(object: any): CompileParams;
                toJSON(message: CompileParams): unknown;
                create(base?: {
                    virtualFileSystem?: {
                        files?: {
                            path?: string;
                            content?: string;
                            isDirectory?: boolean;
                            isBase64?: boolean;
                        }[];
                    } | undefined;
                    filename?: string | undefined;
                    minify?: import("./buildpack_common.js").Minify;
                    info?: {
                        name?: string;
                        owner?: string;
                        version?: string;
                    } | undefined;
                    includeAssets?: boolean;
                } | undefined): CompileParams;
                fromPartial(object: {
                    virtualFileSystem?: {
                        files?: {
                            path?: string;
                            content?: string;
                            isDirectory?: boolean;
                            isBase64?: boolean;
                        }[];
                    } | undefined;
                    filename?: string | undefined;
                    minify?: import("./buildpack_common.js").Minify;
                    info?: {
                        name?: string;
                        owner?: string;
                        version?: string;
                    } | undefined;
                    includeAssets?: boolean;
                }): CompileParams;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.buildpack.CompileResponse";
                encode(message: CompileResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): CompileResponse;
                fromJSON(object: any): CompileResponse;
                toJSON(message: CompileResponse): unknown;
                create(base?: {
                    bundles?: {
                        code?: string;
                        sourceMap?: string | undefined;
                        dependencies?: {
                            actor?: {
                                name?: string;
                                owner?: string;
                                version?: string;
                            } | undefined;
                            hostname?: string;
                            provides?: {
                                actor?: {
                                    name?: string;
                                    owner?: string;
                                    version?: string;
                                } | undefined;
                                definition?: {
                                    fullName?: string;
                                    methods?: {
                                        fullName?: string;
                                        name?: string;
                                        requestStream?: boolean;
                                        responseStream?: boolean;
                                        requestType?: string;
                                        responseType?: string;
                                    }[];
                                    name?: string;
                                    version?: string;
                                } | undefined;
                                locations?: {
                                    allow?: string[];
                                    deny?: string[];
                                } | undefined;
                                partitionsBy?: string[];
                            }[];
                            uses?: {
                                name?: string | undefined;
                                owner?: string | undefined;
                                typeName?: string;
                                versions?: string | undefined;
                            }[];
                        } | undefined;
                        buildInfo?: {
                            created?: Date | undefined;
                            dependencies?: {
                                [x: string]: string | undefined;
                            };
                            targetRuntime?: import("../../runtime/bundle.js").TargetRuntime;
                        } | undefined;
                        assets?: {
                            files?: {
                                path?: string;
                                content?: string;
                                isDirectory?: boolean;
                                isBase64?: boolean;
                            }[];
                        } | undefined;
                        assetIds?: {
                            [x: string]: string | undefined;
                        };
                        webviewAssetIds?: {
                            [x: string]: string | undefined;
                        };
                        paymentsConfig?: {
                            products?: {
                                [x: string]: {
                                    sku?: string;
                                    name?: string;
                                    price?: {
                                        amount?: number;
                                        currency?: import("../../payments/v1alpha/product.js").Currency;
                                    } | undefined;
                                    environment?: import("../../payments/v1alpha/common.js").Environment;
                                    description?: string;
                                    accountingType?: import("../../payments/v1alpha/product.js").AccountingType;
                                    productMetadata?: {
                                        [x: string]: string | undefined;
                                    };
                                    images?: {
                                        [x: string]: string | undefined;
                                    };
                                } | undefined;
                            };
                        } | undefined;
                    }[];
                    errors?: {
                        detail?: {
                            column?: number;
                            filename?: string;
                            line?: number;
                            suggestion?: string;
                            text?: string;
                        } | undefined;
                        text?: string;
                    }[];
                    warnings?: {
                        detail?: {
                            column?: number;
                            filename?: string;
                            line?: number;
                            suggestion?: string;
                            text?: string;
                        } | undefined;
                        text?: string;
                    }[];
                } | undefined): CompileResponse;
                fromPartial(object: {
                    bundles?: {
                        code?: string;
                        sourceMap?: string | undefined;
                        dependencies?: {
                            actor?: {
                                name?: string;
                                owner?: string;
                                version?: string;
                            } | undefined;
                            hostname?: string;
                            provides?: {
                                actor?: {
                                    name?: string;
                                    owner?: string;
                                    version?: string;
                                } | undefined;
                                definition?: {
                                    fullName?: string;
                                    methods?: {
                                        fullName?: string;
                                        name?: string;
                                        requestStream?: boolean;
                                        responseStream?: boolean;
                                        requestType?: string;
                                        responseType?: string;
                                    }[];
                                    name?: string;
                                    version?: string;
                                } | undefined;
                                locations?: {
                                    allow?: string[];
                                    deny?: string[];
                                } | undefined;
                                partitionsBy?: string[];
                            }[];
                            uses?: {
                                name?: string | undefined;
                                owner?: string | undefined;
                                typeName?: string;
                                versions?: string | undefined;
                            }[];
                        } | undefined;
                        buildInfo?: {
                            created?: Date | undefined;
                            dependencies?: {
                                [x: string]: string | undefined;
                            };
                            targetRuntime?: import("../../runtime/bundle.js").TargetRuntime;
                        } | undefined;
                        assets?: {
                            files?: {
                                path?: string;
                                content?: string;
                                isDirectory?: boolean;
                                isBase64?: boolean;
                            }[];
                        } | undefined;
                        assetIds?: {
                            [x: string]: string | undefined;
                        };
                        webviewAssetIds?: {
                            [x: string]: string | undefined;
                        };
                        paymentsConfig?: {
                            products?: {
                                [x: string]: {
                                    sku?: string;
                                    name?: string;
                                    price?: {
                                        amount?: number;
                                        currency?: import("../../payments/v1alpha/product.js").Currency;
                                    } | undefined;
                                    environment?: import("../../payments/v1alpha/common.js").Environment;
                                    description?: string;
                                    accountingType?: import("../../payments/v1alpha/product.js").AccountingType;
                                    productMetadata?: {
                                        [x: string]: string | undefined;
                                    };
                                    images?: {
                                        [x: string]: string | undefined;
                                    };
                                } | undefined;
                            };
                        } | undefined;
                    }[];
                    errors?: {
                        detail?: {
                            column?: number;
                            filename?: string;
                            line?: number;
                            suggestion?: string;
                            text?: string;
                        } | undefined;
                        text?: string;
                    }[];
                    warnings?: {
                        detail?: {
                            column?: number;
                            filename?: string;
                            line?: number;
                            suggestion?: string;
                            text?: string;
                        } | undefined;
                        text?: string;
                    }[];
                }): CompileResponse;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        /** Automatically rebundle when input files change. */
        readonly watch: {
            readonly name: "Watch";
            readonly requestType: {
                $type: "devvit.plugin.buildpack.CompileParams";
                encode(message: CompileParams, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): CompileParams;
                fromJSON(object: any): CompileParams;
                toJSON(message: CompileParams): unknown;
                create(base?: {
                    virtualFileSystem?: {
                        files?: {
                            path?: string;
                            content?: string;
                            isDirectory?: boolean;
                            isBase64?: boolean;
                        }[];
                    } | undefined;
                    filename?: string | undefined;
                    minify?: import("./buildpack_common.js").Minify;
                    info?: {
                        name?: string;
                        owner?: string;
                        version?: string;
                    } | undefined;
                    includeAssets?: boolean;
                } | undefined): CompileParams;
                fromPartial(object: {
                    virtualFileSystem?: {
                        files?: {
                            path?: string;
                            content?: string;
                            isDirectory?: boolean;
                            isBase64?: boolean;
                        }[];
                    } | undefined;
                    filename?: string | undefined;
                    minify?: import("./buildpack_common.js").Minify;
                    info?: {
                        name?: string;
                        owner?: string;
                        version?: string;
                    } | undefined;
                    includeAssets?: boolean;
                }): CompileParams;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.buildpack.CompileResponse";
                encode(message: CompileResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): CompileResponse;
                fromJSON(object: any): CompileResponse;
                toJSON(message: CompileResponse): unknown;
                create(base?: {
                    bundles?: {
                        code?: string;
                        sourceMap?: string | undefined;
                        dependencies?: {
                            actor?: {
                                name?: string;
                                owner?: string;
                                version?: string;
                            } | undefined;
                            hostname?: string;
                            provides?: {
                                actor?: {
                                    name?: string;
                                    owner?: string;
                                    version?: string;
                                } | undefined;
                                definition?: {
                                    fullName?: string;
                                    methods?: {
                                        fullName?: string;
                                        name?: string;
                                        requestStream?: boolean;
                                        responseStream?: boolean;
                                        requestType?: string;
                                        responseType?: string;
                                    }[];
                                    name?: string;
                                    version?: string;
                                } | undefined;
                                locations?: {
                                    allow?: string[];
                                    deny?: string[];
                                } | undefined;
                                partitionsBy?: string[];
                            }[];
                            uses?: {
                                name?: string | undefined;
                                owner?: string | undefined;
                                typeName?: string;
                                versions?: string | undefined;
                            }[];
                        } | undefined;
                        buildInfo?: {
                            created?: Date | undefined;
                            dependencies?: {
                                [x: string]: string | undefined;
                            };
                            targetRuntime?: import("../../runtime/bundle.js").TargetRuntime;
                        } | undefined;
                        assets?: {
                            files?: {
                                path?: string;
                                content?: string;
                                isDirectory?: boolean;
                                isBase64?: boolean;
                            }[];
                        } | undefined;
                        assetIds?: {
                            [x: string]: string | undefined;
                        };
                        webviewAssetIds?: {
                            [x: string]: string | undefined;
                        };
                        paymentsConfig?: {
                            products?: {
                                [x: string]: {
                                    sku?: string;
                                    name?: string;
                                    price?: {
                                        amount?: number;
                                        currency?: import("../../payments/v1alpha/product.js").Currency;
                                    } | undefined;
                                    environment?: import("../../payments/v1alpha/common.js").Environment;
                                    description?: string;
                                    accountingType?: import("../../payments/v1alpha/product.js").AccountingType;
                                    productMetadata?: {
                                        [x: string]: string | undefined;
                                    };
                                    images?: {
                                        [x: string]: string | undefined;
                                    };
                                } | undefined;
                            };
                        } | undefined;
                    }[];
                    errors?: {
                        detail?: {
                            column?: number;
                            filename?: string;
                            line?: number;
                            suggestion?: string;
                            text?: string;
                        } | undefined;
                        text?: string;
                    }[];
                    warnings?: {
                        detail?: {
                            column?: number;
                            filename?: string;
                            line?: number;
                            suggestion?: string;
                            text?: string;
                        } | undefined;
                        text?: string;
                    }[];
                } | undefined): CompileResponse;
                fromPartial(object: {
                    bundles?: {
                        code?: string;
                        sourceMap?: string | undefined;
                        dependencies?: {
                            actor?: {
                                name?: string;
                                owner?: string;
                                version?: string;
                            } | undefined;
                            hostname?: string;
                            provides?: {
                                actor?: {
                                    name?: string;
                                    owner?: string;
                                    version?: string;
                                } | undefined;
                                definition?: {
                                    fullName?: string;
                                    methods?: {
                                        fullName?: string;
                                        name?: string;
                                        requestStream?: boolean;
                                        responseStream?: boolean;
                                        requestType?: string;
                                        responseType?: string;
                                    }[];
                                    name?: string;
                                    version?: string;
                                } | undefined;
                                locations?: {
                                    allow?: string[];
                                    deny?: string[];
                                } | undefined;
                                partitionsBy?: string[];
                            }[];
                            uses?: {
                                name?: string | undefined;
                                owner?: string | undefined;
                                typeName?: string;
                                versions?: string | undefined;
                            }[];
                        } | undefined;
                        buildInfo?: {
                            created?: Date | undefined;
                            dependencies?: {
                                [x: string]: string | undefined;
                            };
                            targetRuntime?: import("../../runtime/bundle.js").TargetRuntime;
                        } | undefined;
                        assets?: {
                            files?: {
                                path?: string;
                                content?: string;
                                isDirectory?: boolean;
                                isBase64?: boolean;
                            }[];
                        } | undefined;
                        assetIds?: {
                            [x: string]: string | undefined;
                        };
                        webviewAssetIds?: {
                            [x: string]: string | undefined;
                        };
                        paymentsConfig?: {
                            products?: {
                                [x: string]: {
                                    sku?: string;
                                    name?: string;
                                    price?: {
                                        amount?: number;
                                        currency?: import("../../payments/v1alpha/product.js").Currency;
                                    } | undefined;
                                    environment?: import("../../payments/v1alpha/common.js").Environment;
                                    description?: string;
                                    accountingType?: import("../../payments/v1alpha/product.js").AccountingType;
                                    productMetadata?: {
                                        [x: string]: string | undefined;
                                    };
                                    images?: {
                                        [x: string]: string | undefined;
                                    };
                                } | undefined;
                            };
                        } | undefined;
                    }[];
                    errors?: {
                        detail?: {
                            column?: number;
                            filename?: string;
                            line?: number;
                            suggestion?: string;
                            text?: string;
                        } | undefined;
                        text?: string;
                    }[];
                    warnings?: {
                        detail?: {
                            column?: number;
                            filename?: string;
                            line?: number;
                            suggestion?: string;
                            text?: string;
                        } | undefined;
                        text?: string;
                    }[];
                }): CompileResponse;
            };
            readonly responseStream: true;
            readonly options: {};
        };
    };
};
interface Rpc {
    request(service: string, method: string, data: Uint8Array, metadata?: Metadata): Promise<Uint8Array>;
    clientStreamingRequest(service: string, method: string, data: Observable<Uint8Array>, metadata?: Metadata): Promise<Uint8Array>;
    serverStreamingRequest(service: string, method: string, data: Uint8Array, metadata?: Metadata): Observable<Uint8Array>;
    bidirectionalStreamingRequest(service: string, method: string, data: Observable<Uint8Array>, metadata?: Metadata): Observable<Uint8Array>;
}
export {};
//# sourceMappingURL=buildpack.d.ts.map