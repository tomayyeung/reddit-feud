import { CompileParams, CompileResponse } from './buildpack_common.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface BuildPackClient {
    Compile(request: CompileParams): Promise<CompileResponse>;
    Watch(request: CompileParams): Promise<CompileResponse>;
}
export declare class BuildPackClientJSON implements BuildPackClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Compile(request: CompileParams): Promise<CompileResponse>;
    Watch(request: CompileParams): Promise<CompileResponse>;
}
export declare class BuildPackClientProtobuf implements BuildPackClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Compile(request: CompileParams): Promise<CompileResponse>;
    Watch(request: CompileParams): Promise<CompileResponse>;
}
export {};
//# sourceMappingURL=buildpack.twirp-client.d.ts.map