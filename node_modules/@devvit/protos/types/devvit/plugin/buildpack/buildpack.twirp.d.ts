/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { CompileParams, CompileResponse } from './buildpack_common.js';
export interface BuildPackTwirp<T extends TwirpContext = TwirpContext> {
    Compile(ctx: T, request: CompileParams): Promise<CompileResponse>;
    Watch(ctx: T, request: CompileParams): Promise<CompileResponse>;
}
export declare enum BuildPackMethod {
    Compile = "Compile",
    Watch = "Watch"
}
export declare const BuildPackMethodList: BuildPackMethod[];
export declare function createBuildPackServer<T extends TwirpContext = TwirpContext>(service: BuildPackTwirp<T>): TwirpServer<BuildPackTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=buildpack.twirp.d.ts.map