/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { Empty } from '../../../google/protobuf/empty.js';
import { Timestamp } from '../../../google/protobuf/timestamp.js';
export interface ClockTwirp<T extends TwirpContext = TwirpContext> {
    Now(ctx: T, request: Empty): Promise<Timestamp>;
}
export declare enum ClockMethod {
    Now = "Now"
}
export declare const ClockMethodList: ClockMethod[];
export declare function createClockServer<T extends TwirpContext = TwirpContext>(service: ClockTwirp<T>): TwirpServer<ClockTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=clock.twirp.d.ts.map