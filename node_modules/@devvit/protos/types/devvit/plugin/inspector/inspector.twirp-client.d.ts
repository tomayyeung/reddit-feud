import { InspectorQuery, InspectorDescriptions, InspectorUpdate } from './inspector.js';
import { Empty } from '../../../google/protobuf/empty.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface InspectorClient {
    ListActors(request: InspectorQuery): Promise<InspectorDescriptions>;
    ActorChanges(request: Empty): Promise<InspectorUpdate>;
}
export declare class InspectorClientJSON implements InspectorClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    ListActors(request: InspectorQuery): Promise<InspectorDescriptions>;
    ActorChanges(request: Empty): Promise<InspectorUpdate>;
}
export declare class InspectorClientProtobuf implements InspectorClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    ListActors(request: InspectorQuery): Promise<InspectorDescriptions>;
    ActorChanges(request: Empty): Promise<InspectorUpdate>;
}
export {};
//# sourceMappingURL=inspector.twirp-client.d.ts.map