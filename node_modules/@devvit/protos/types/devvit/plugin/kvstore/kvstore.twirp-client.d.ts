import { MessageSet, KeySet, ListFilter } from './kvstore.js';
import { Empty } from '../../../google/protobuf/empty.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface KVStoreClient {
    Put(request: MessageSet): Promise<Empty>;
    Get(request: KeySet): Promise<MessageSet>;
    Del(request: KeySet): Promise<Empty>;
    List(request: ListFilter): Promise<KeySet>;
}
export declare class KVStoreClientJSON implements KVStoreClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Put(request: MessageSet): Promise<Empty>;
    Get(request: KeySet): Promise<MessageSet>;
    Del(request: KeySet): Promise<Empty>;
    List(request: ListFilter): Promise<KeySet>;
}
export declare class KVStoreClientProtobuf implements KVStoreClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Put(request: MessageSet): Promise<Empty>;
    Get(request: KeySet): Promise<MessageSet>;
    Del(request: KeySet): Promise<Empty>;
    List(request: ListFilter): Promise<KeySet>;
}
export {};
//# sourceMappingURL=kvstore.twirp-client.d.ts.map