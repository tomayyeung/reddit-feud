/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { MessageSet, KeySet, ListFilter } from './kvstore.js';
import { Empty } from '../../../google/protobuf/empty.js';
export interface KVStoreTwirp<T extends TwirpContext = TwirpContext> {
    Put(ctx: T, request: MessageSet): Promise<Empty>;
    Get(ctx: T, request: KeySet): Promise<MessageSet>;
    Del(ctx: T, request: KeySet): Promise<Empty>;
    List(ctx: T, request: ListFilter): Promise<KeySet>;
}
export declare enum KVStoreMethod {
    Put = "Put",
    Get = "Get",
    Del = "Del",
    List = "List"
}
export declare const KVStoreMethodList: KVStoreMethod[];
export declare function createKVStoreServer<T extends TwirpContext = TwirpContext>(service: KVStoreTwirp<T>): TwirpServer<KVStoreTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=kvstore.twirp.d.ts.map