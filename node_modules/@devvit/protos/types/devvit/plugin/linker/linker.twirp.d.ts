/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { Bundle } from '../buildpack/buildpack_common.js';
import { LinkerResponse } from './linker.js';
export interface LinkerTwirp<T extends TwirpContext = TwirpContext> {
    Link(ctx: T, request: Bundle): Promise<LinkerResponse>;
}
export declare enum LinkerMethod {
    Link = "Link"
}
export declare const LinkerMethodList: LinkerMethod[];
export declare function createLinkerServer<T extends TwirpContext = TwirpContext>(service: LinkerTwirp<T>): TwirpServer<LinkerTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=linker.twirp.d.ts.map