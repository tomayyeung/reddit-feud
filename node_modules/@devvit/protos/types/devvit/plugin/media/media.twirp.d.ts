/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { MediaUploadRequest, MediaUploadResponse } from './media.js';
export interface MediaServiceTwirp<T extends TwirpContext = TwirpContext> {
    Upload(ctx: T, request: MediaUploadRequest): Promise<MediaUploadResponse>;
}
export declare enum MediaServiceMethod {
    Upload = "Upload"
}
export declare const MediaServiceMethodList: MediaServiceMethod[];
export declare function createMediaServiceServer<T extends TwirpContext = TwirpContext>(service: MediaServiceTwirp<T>): TwirpServer<MediaServiceTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=media.twirp.d.ts.map