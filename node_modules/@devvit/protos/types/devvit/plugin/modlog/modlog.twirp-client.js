import { ModlogRequest, ModlogResponse } from './modlog.js';
export class ModlogClientJSON {
    constructor(rpc) {
        this.rpc = rpc;
        this.Add.bind(this);
    }
    Add(request) {
        const data = ModlogRequest.toJSON(request);
        const promise = this.rpc.request('devvit.plugin.modlog.Modlog', 'Add', 'application/json', data);
        return promise.then((data) => ModlogResponse.fromJSON(data));
    }
}
export class ModlogClientProtobuf {
    constructor(rpc) {
        this.rpc = rpc;
        this.Add.bind(this);
    }
    Add(request) {
        const data = ModlogRequest.encode(request).finish();
        const promise = this.rpc.request('devvit.plugin.modlog.Modlog', 'Add', 'application/protobuf', data);
        return promise.then((data) => ModlogResponse.decode(data));
    }
}
