import { GetProductsRequest, GetProductsResponse, GetOrdersRequest, GetOrdersResponse, AcknowledgeOrderDeliveryRequest, AcknowledgeOrderDeliveryResponse } from './payments.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface PaymentsServiceClient {
    GetProducts(request: GetProductsRequest): Promise<GetProductsResponse>;
    GetOrders(request: GetOrdersRequest): Promise<GetOrdersResponse>;
    AcknowledgeOrderDelivery(request: AcknowledgeOrderDeliveryRequest): Promise<AcknowledgeOrderDeliveryResponse>;
}
export declare class PaymentsServiceClientJSON implements PaymentsServiceClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    GetProducts(request: GetProductsRequest): Promise<GetProductsResponse>;
    GetOrders(request: GetOrdersRequest): Promise<GetOrdersResponse>;
    AcknowledgeOrderDelivery(request: AcknowledgeOrderDeliveryRequest): Promise<AcknowledgeOrderDeliveryResponse>;
}
export declare class PaymentsServiceClientProtobuf implements PaymentsServiceClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    GetProducts(request: GetProductsRequest): Promise<GetProductsResponse>;
    GetOrders(request: GetOrdersRequest): Promise<GetOrdersResponse>;
    AcknowledgeOrderDelivery(request: AcknowledgeOrderDeliveryRequest): Promise<AcknowledgeOrderDeliveryResponse>;
}
export {};
//# sourceMappingURL=payments.twirp-client.d.ts.map