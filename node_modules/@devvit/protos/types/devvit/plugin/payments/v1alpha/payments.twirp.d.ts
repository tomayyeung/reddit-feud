/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { GetProductsRequest, GetProductsResponse, GetOrdersRequest, GetOrdersResponse, AcknowledgeOrderDeliveryRequest, AcknowledgeOrderDeliveryResponse } from './payments.js';
export interface PaymentsServiceTwirp<T extends TwirpContext = TwirpContext> {
    GetProducts(ctx: T, request: GetProductsRequest): Promise<GetProductsResponse>;
    GetOrders(ctx: T, request: GetOrdersRequest): Promise<GetOrdersResponse>;
    AcknowledgeOrderDelivery(ctx: T, request: AcknowledgeOrderDeliveryRequest): Promise<AcknowledgeOrderDeliveryResponse>;
}
export declare enum PaymentsServiceMethod {
    GetProducts = "GetProducts",
    GetOrders = "GetOrders",
    AcknowledgeOrderDelivery = "AcknowledgeOrderDelivery"
}
export declare const PaymentsServiceMethodList: PaymentsServiceMethod[];
export declare function createPaymentsServiceServer<T extends TwirpContext = TwirpContext>(service: PaymentsServiceTwirp<T>): TwirpServer<PaymentsServiceTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=payments.twirp.d.ts.map