/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { ClearFlairTemplatesRequest, DeleteFlairRequest, DeleteFlairTemplateRequest, FlairRequest, FlairTemplateOrderRequest, FlairConfigRequest, FlairCsvRequest, FlairCsvResponse, FlairListRequest, FlairListResponse, FlairSelectorRequest, FlairSelectorResponse, FlairTemplateRequest, FlairObject, LinkFlairRequest, FlairArray, SelectFlairRequest, SetFlairEnabledRequest } from './flair_msg.js';
import { JsonStatus } from '../common/common_msg.js';
import { Empty } from '../../../../google/protobuf/empty.js';
export interface FlairTwirp<T extends TwirpContext = TwirpContext> {
    ClearFlairTemplates(ctx: T, request: ClearFlairTemplatesRequest): Promise<JsonStatus>;
    DeleteFlair(ctx: T, request: DeleteFlairRequest): Promise<JsonStatus>;
    DeleteFlairTemplate(ctx: T, request: DeleteFlairTemplateRequest): Promise<JsonStatus>;
    Flair(ctx: T, request: FlairRequest): Promise<JsonStatus>;
    FlairTemplateOrder(ctx: T, request: FlairTemplateOrderRequest): Promise<Empty>;
    FlairConfig(ctx: T, request: FlairConfigRequest): Promise<JsonStatus>;
    FlairCsv(ctx: T, request: FlairCsvRequest): Promise<FlairCsvResponse>;
    FlairList(ctx: T, request: FlairListRequest): Promise<FlairListResponse>;
    FlairSelector(ctx: T, request: FlairSelectorRequest): Promise<FlairSelectorResponse>;
    FlairTemplate(ctx: T, request: FlairTemplateRequest): Promise<FlairObject>;
    LinkFlair(ctx: T, request: LinkFlairRequest): Promise<FlairArray>;
    SelectFlair(ctx: T, request: SelectFlairRequest): Promise<JsonStatus>;
    SetFlairEnabled(ctx: T, request: SetFlairEnabledRequest): Promise<JsonStatus>;
    UserFlair(ctx: T, request: LinkFlairRequest): Promise<FlairArray>;
}
export declare enum FlairMethod {
    ClearFlairTemplates = "ClearFlairTemplates",
    DeleteFlair = "DeleteFlair",
    DeleteFlairTemplate = "DeleteFlairTemplate",
    Flair = "Flair",
    FlairTemplateOrder = "FlairTemplateOrder",
    FlairConfig = "FlairConfig",
    FlairCsv = "FlairCsv",
    FlairList = "FlairList",
    FlairSelector = "FlairSelector",
    FlairTemplate = "FlairTemplate",
    LinkFlair = "LinkFlair",
    SelectFlair = "SelectFlair",
    SetFlairEnabled = "SetFlairEnabled",
    UserFlair = "UserFlair"
}
export declare const FlairMethodList: FlairMethod[];
export declare function createFlairServer<T extends TwirpContext = TwirpContext>(service: FlairTwirp<T>): TwirpServer<FlairTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=flair_svc.twirp.d.ts.map