import { QueryRequest, QueryResponse, PersistedQueryRequest } from './graphql_msg.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface GraphQLClient {
    Query(request: QueryRequest): Promise<QueryResponse>;
    PersistedQuery(request: PersistedQueryRequest): Promise<QueryResponse>;
}
export declare class GraphQLClientJSON implements GraphQLClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Query(request: QueryRequest): Promise<QueryResponse>;
    PersistedQuery(request: PersistedQueryRequest): Promise<QueryResponse>;
}
export declare class GraphQLClientProtobuf implements GraphQLClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Query(request: QueryRequest): Promise<QueryResponse>;
    PersistedQuery(request: PersistedQueryRequest): Promise<QueryResponse>;
}
export {};
//# sourceMappingURL=graphql_svc.twirp-client.d.ts.map