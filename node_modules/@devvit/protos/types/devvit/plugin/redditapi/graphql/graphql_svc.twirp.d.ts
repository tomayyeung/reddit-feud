/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { QueryRequest, QueryResponse, PersistedQueryRequest } from './graphql_msg.js';
export interface GraphQLTwirp<T extends TwirpContext = TwirpContext> {
    Query(ctx: T, request: QueryRequest): Promise<QueryResponse>;
    PersistedQuery(ctx: T, request: PersistedQueryRequest): Promise<QueryResponse>;
}
export declare enum GraphQLMethod {
    Query = "Query",
    PersistedQuery = "PersistedQuery"
}
export declare const GraphQLMethodList: GraphQLMethod[];
export declare function createGraphQLServer<T extends TwirpContext = TwirpContext>(service: GraphQLTwirp<T>): TwirpServer<GraphQLTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=graphql_svc.twirp.d.ts.map