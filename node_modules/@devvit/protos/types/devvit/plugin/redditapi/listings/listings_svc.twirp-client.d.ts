import { GetBestRequest, GetByIdRequest, GetCommentsRequest, ListingResponse, GetDuplicatesRequest, GetHotRequest, GetNewRequest, GetRisingRequest, GetSortRequest } from './listings_msg.js';
import { Listing } from '../common/common_msg.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface ListingsClient {
    Best(request: GetBestRequest): Promise<Listing>;
    ById(request: GetByIdRequest): Promise<Listing>;
    Comments(request: GetCommentsRequest): Promise<ListingResponse>;
    Duplicates(request: GetDuplicatesRequest): Promise<ListingResponse>;
    Hot(request: GetHotRequest): Promise<Listing>;
    New(request: GetNewRequest): Promise<Listing>;
    Rising(request: GetRisingRequest): Promise<Listing>;
    Sort(request: GetSortRequest): Promise<Listing>;
}
export declare class ListingsClientJSON implements ListingsClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Best(request: GetBestRequest): Promise<Listing>;
    ById(request: GetByIdRequest): Promise<Listing>;
    Comments(request: GetCommentsRequest): Promise<ListingResponse>;
    Duplicates(request: GetDuplicatesRequest): Promise<ListingResponse>;
    Hot(request: GetHotRequest): Promise<Listing>;
    New(request: GetNewRequest): Promise<Listing>;
    Rising(request: GetRisingRequest): Promise<Listing>;
    Sort(request: GetSortRequest): Promise<Listing>;
}
export declare class ListingsClientProtobuf implements ListingsClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Best(request: GetBestRequest): Promise<Listing>;
    ById(request: GetByIdRequest): Promise<Listing>;
    Comments(request: GetCommentsRequest): Promise<ListingResponse>;
    Duplicates(request: GetDuplicatesRequest): Promise<ListingResponse>;
    Hot(request: GetHotRequest): Promise<Listing>;
    New(request: GetNewRequest): Promise<Listing>;
    Rising(request: GetRisingRequest): Promise<Listing>;
    Sort(request: GetSortRequest): Promise<Listing>;
}
export {};
//# sourceMappingURL=listings_svc.twirp-client.d.ts.map