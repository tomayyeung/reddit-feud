/**
 * #modnote_svc.ts
 *
 * @packageDocumentation
 */
/* eslint-disable */
import _m0 from "protobufjs/minimal.js";
import { Empty } from "../../../../google/protobuf/empty.js";
import { DeleteNotesRequest, DeleteNotesResponse, GetNotesRequest, ModNotesResponse, PostModNotesResponse, PostNotesRequest, PostRemovalNoteRequest, RecentNotesRequest, } from "./modnote_msg.js";
export const ModNoteServiceName = "devvit.plugin.redditapi.modnote.ModNote";
export class ModNoteClientImpl {
    constructor(rpc, opts) {
        this.service = opts?.service || ModNoteServiceName;
        this.rpc = rpc;
        this.GetNotes = this.GetNotes.bind(this);
        this.DeleteNotes = this.DeleteNotes.bind(this);
        this.PostNotes = this.PostNotes.bind(this);
        this.PostRemovalNote = this.PostRemovalNote.bind(this);
        this.RecentNotes = this.RecentNotes.bind(this);
    }
    GetNotes(request, metadata) {
        const data = GetNotesRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "GetNotes", data, metadata);
        return promise.then((data) => ModNotesResponse.decode(_m0.Reader.create(data)));
    }
    DeleteNotes(request, metadata) {
        const data = DeleteNotesRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "DeleteNotes", data, metadata);
        return promise.then((data) => DeleteNotesResponse.decode(_m0.Reader.create(data)));
    }
    PostNotes(request, metadata) {
        const data = PostNotesRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "PostNotes", data, metadata);
        return promise.then((data) => PostModNotesResponse.decode(_m0.Reader.create(data)));
    }
    PostRemovalNote(request, metadata) {
        const data = PostRemovalNoteRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "PostRemovalNote", data, metadata);
        return promise.then((data) => Empty.decode(_m0.Reader.create(data)));
    }
    RecentNotes(request, metadata) {
        const data = RecentNotesRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "RecentNotes", data, metadata);
        return promise.then((data) => ModNotesResponse.decode(_m0.Reader.create(data)));
    }
}
export const ModNoteDefinition = {
    name: "ModNote",
    fullName: "devvit.plugin.redditapi.modnote.ModNote",
    methods: {
        /** @see {@link https://www.reddit.com/dev/api#GET_api_mod_notes} */
        getNotes: {
            name: "GetNotes",
            requestType: GetNotesRequest,
            requestStream: false,
            responseType: ModNotesResponse,
            responseStream: false,
            options: {
                _unknownFields: {
                    480010: [
                        new Uint8Array([5, 10, 3, 71, 69, 84]),
                        new Uint8Array([
                            96,
                            18,
                            94,
                            47,
                            97,
                            112,
                            105,
                            47,
                            109,
                            111,
                            100,
                            47,
                            110,
                            111,
                            116,
                            101,
                            115,
                            63,
                            98,
                            101,
                            102,
                            111,
                            114,
                            101,
                            61,
                            123,
                            98,
                            101,
                            102,
                            111,
                            114,
                            101,
                            125,
                            38,
                            102,
                            105,
                            108,
                            116,
                            101,
                            114,
                            61,
                            123,
                            102,
                            105,
                            108,
                            116,
                            101,
                            114,
                            125,
                            38,
                            108,
                            105,
                            109,
                            105,
                            116,
                            61,
                            123,
                            108,
                            105,
                            109,
                            105,
                            116,
                            125,
                            38,
                            115,
                            117,
                            98,
                            114,
                            101,
                            100,
                            100,
                            105,
                            116,
                            61,
                            123,
                            115,
                            117,
                            98,
                            114,
                            101,
                            100,
                            100,
                            105,
                            116,
                            125,
                            38,
                            117,
                            115,
                            101,
                            114,
                            61,
                            123,
                            117,
                            115,
                            101,
                            114,
                            125,
                        ]),
                    ],
                },
            },
        },
        /** @see {@link https://www.reddit.com/dev/api/#DELETE_api_mod_notes} */
        deleteNotes: {
            name: "DeleteNotes",
            requestType: DeleteNotesRequest,
            requestStream: false,
            responseType: DeleteNotesResponse,
            responseStream: false,
            options: {
                _unknownFields: {
                    480010: [
                        new Uint8Array([8, 10, 6, 68, 69, 76, 69, 84, 69]),
                        new Uint8Array([
                            68,
                            18,
                            66,
                            47,
                            97,
                            112,
                            105,
                            47,
                            109,
                            111,
                            100,
                            47,
                            110,
                            111,
                            116,
                            101,
                            115,
                            63,
                            110,
                            111,
                            116,
                            101,
                            95,
                            105,
                            100,
                            61,
                            123,
                            110,
                            111,
                            116,
                            101,
                            95,
                            105,
                            100,
                            125,
                            38,
                            115,
                            117,
                            98,
                            114,
                            101,
                            100,
                            100,
                            105,
                            116,
                            61,
                            123,
                            115,
                            117,
                            98,
                            114,
                            101,
                            100,
                            100,
                            105,
                            116,
                            125,
                            38,
                            117,
                            115,
                            101,
                            114,
                            61,
                            123,
                            117,
                            115,
                            101,
                            114,
                            125,
                        ]),
                    ],
                },
            },
        },
        /** @see {@link https://www.reddit.com/dev/api#POST_api_mod_notes} */
        postNotes: {
            name: "PostNotes",
            requestType: PostNotesRequest,
            requestStream: false,
            responseType: PostModNotesResponse,
            responseStream: false,
            options: {
                _unknownFields: {
                    480010: [
                        new Uint8Array([6, 10, 4, 80, 79, 83, 84]),
                        new Uint8Array([16, 18, 14, 47, 97, 112, 105, 47, 109, 111, 100, 47, 110, 111, 116, 101, 115]),
                        new Uint8Array([2, 24, 4]),
                    ],
                },
            },
        },
        /** Add a mod note for why a post or comment was removed */
        postRemovalNote: {
            name: "PostRemovalNote",
            requestType: PostRemovalNoteRequest,
            requestStream: false,
            responseType: Empty,
            responseStream: false,
            options: {
                _unknownFields: {
                    480010: [
                        new Uint8Array([6, 10, 4, 80, 79, 83, 84]),
                        new Uint8Array([
                            36,
                            18,
                            34,
                            47,
                            97,
                            112,
                            105,
                            47,
                            118,
                            49,
                            47,
                            109,
                            111,
                            100,
                            97,
                            99,
                            116,
                            105,
                            111,
                            110,
                            115,
                            47,
                            114,
                            101,
                            109,
                            111,
                            118,
                            97,
                            108,
                            95,
                            114,
                            101,
                            97,
                            115,
                            111,
                            110,
                            115,
                        ]),
                        new Uint8Array([2, 24, 2]),
                    ],
                },
            },
        },
        /** @see {@link https://www.reddit.com/dev/api#GET_api_mod_notes_recent} */
        recentNotes: {
            name: "RecentNotes",
            requestType: RecentNotesRequest,
            requestStream: false,
            responseType: ModNotesResponse,
            responseStream: false,
            options: {
                _unknownFields: {
                    480010: [
                        new Uint8Array([5, 10, 3, 71, 69, 84]),
                        new Uint8Array([
                            61,
                            18,
                            59,
                            47,
                            97,
                            112,
                            105,
                            47,
                            109,
                            111,
                            100,
                            47,
                            110,
                            111,
                            116,
                            101,
                            115,
                            47,
                            114,
                            101,
                            99,
                            101,
                            110,
                            116,
                            63,
                            115,
                            117,
                            98,
                            114,
                            101,
                            100,
                            100,
                            105,
                            116,
                            115,
                            61,
                            123,
                            115,
                            117,
                            98,
                            114,
                            101,
                            100,
                            100,
                            105,
                            116,
                            115,
                            125,
                            38,
                            117,
                            115,
                            101,
                            114,
                            115,
                            61,
                            123,
                            117,
                            115,
                            101,
                            114,
                            115,
                            125,
                        ]),
                    ],
                },
            },
        },
    },
};
