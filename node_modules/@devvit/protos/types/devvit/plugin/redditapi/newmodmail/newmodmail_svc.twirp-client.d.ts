import { BulkReadConversationsRequest, BulkReadConversationsResponse, GetConversationsRequest, GetConversationsResponse, CreateConversationRequest, CreateConversationResponse, GetConversationRequest, GetConversationResponse, CreateConversationMessageRequest, CreateConversationMessageResponse, BasicConversationRequest, ApproveConversationResponse, ArchiveConversationResponse, HighlightConversationResponse, MuteConversationRequest, MuteConversationResponse, TempBanRequest, TempBanResponse, ConversationUserData, BasicConversationsRequest, SubredditsResponse, UnreadCountResponse } from './newmodmail_msg.js';
import { Empty } from '../../../../google/protobuf/empty.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface NewModmailClient {
    BulkReadConversations(request: BulkReadConversationsRequest): Promise<BulkReadConversationsResponse>;
    GetConversations(request: GetConversationsRequest): Promise<GetConversationsResponse>;
    CreateConversation(request: CreateConversationRequest): Promise<CreateConversationResponse>;
    GetConversation(request: GetConversationRequest): Promise<GetConversationResponse>;
    CreateConversationMessage(request: CreateConversationMessageRequest): Promise<CreateConversationMessageResponse>;
    ApproveConversation(request: BasicConversationRequest): Promise<ApproveConversationResponse>;
    ArchiveConversation(request: BasicConversationRequest): Promise<ArchiveConversationResponse>;
    DisapproveConversation(request: BasicConversationRequest): Promise<ApproveConversationResponse>;
    UnhighlightConversation(request: BasicConversationRequest): Promise<HighlightConversationResponse>;
    HighlightConversation(request: BasicConversationRequest): Promise<HighlightConversationResponse>;
    MuteConversation(request: MuteConversationRequest): Promise<MuteConversationResponse>;
    TempBan(request: TempBanRequest): Promise<TempBanResponse>;
    UnarchiveConversation(request: BasicConversationRequest): Promise<ArchiveConversationResponse>;
    Unban(request: BasicConversationRequest): Promise<TempBanResponse>;
    UnmuteConversation(request: BasicConversationRequest): Promise<MuteConversationResponse>;
    UserConversations(request: BasicConversationRequest): Promise<ConversationUserData>;
    Read(request: BasicConversationsRequest): Promise<Empty>;
    Subreddits(request: Empty): Promise<SubredditsResponse>;
    Unread(request: BasicConversationsRequest): Promise<Empty>;
    UnreadCount(request: Empty): Promise<UnreadCountResponse>;
}
export declare class NewModmailClientJSON implements NewModmailClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    BulkReadConversations(request: BulkReadConversationsRequest): Promise<BulkReadConversationsResponse>;
    GetConversations(request: GetConversationsRequest): Promise<GetConversationsResponse>;
    CreateConversation(request: CreateConversationRequest): Promise<CreateConversationResponse>;
    GetConversation(request: GetConversationRequest): Promise<GetConversationResponse>;
    CreateConversationMessage(request: CreateConversationMessageRequest): Promise<CreateConversationMessageResponse>;
    ApproveConversation(request: BasicConversationRequest): Promise<ApproveConversationResponse>;
    ArchiveConversation(request: BasicConversationRequest): Promise<ArchiveConversationResponse>;
    DisapproveConversation(request: BasicConversationRequest): Promise<ApproveConversationResponse>;
    UnhighlightConversation(request: BasicConversationRequest): Promise<HighlightConversationResponse>;
    HighlightConversation(request: BasicConversationRequest): Promise<HighlightConversationResponse>;
    MuteConversation(request: MuteConversationRequest): Promise<MuteConversationResponse>;
    TempBan(request: TempBanRequest): Promise<TempBanResponse>;
    UnarchiveConversation(request: BasicConversationRequest): Promise<ArchiveConversationResponse>;
    Unban(request: BasicConversationRequest): Promise<TempBanResponse>;
    UnmuteConversation(request: BasicConversationRequest): Promise<MuteConversationResponse>;
    UserConversations(request: BasicConversationRequest): Promise<ConversationUserData>;
    Read(request: BasicConversationsRequest): Promise<Empty>;
    Subreddits(request: Empty): Promise<SubredditsResponse>;
    Unread(request: BasicConversationsRequest): Promise<Empty>;
    UnreadCount(request: Empty): Promise<UnreadCountResponse>;
}
export declare class NewModmailClientProtobuf implements NewModmailClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    BulkReadConversations(request: BulkReadConversationsRequest): Promise<BulkReadConversationsResponse>;
    GetConversations(request: GetConversationsRequest): Promise<GetConversationsResponse>;
    CreateConversation(request: CreateConversationRequest): Promise<CreateConversationResponse>;
    GetConversation(request: GetConversationRequest): Promise<GetConversationResponse>;
    CreateConversationMessage(request: CreateConversationMessageRequest): Promise<CreateConversationMessageResponse>;
    ApproveConversation(request: BasicConversationRequest): Promise<ApproveConversationResponse>;
    ArchiveConversation(request: BasicConversationRequest): Promise<ArchiveConversationResponse>;
    DisapproveConversation(request: BasicConversationRequest): Promise<ApproveConversationResponse>;
    UnhighlightConversation(request: BasicConversationRequest): Promise<HighlightConversationResponse>;
    HighlightConversation(request: BasicConversationRequest): Promise<HighlightConversationResponse>;
    MuteConversation(request: MuteConversationRequest): Promise<MuteConversationResponse>;
    TempBan(request: TempBanRequest): Promise<TempBanResponse>;
    UnarchiveConversation(request: BasicConversationRequest): Promise<ArchiveConversationResponse>;
    Unban(request: BasicConversationRequest): Promise<TempBanResponse>;
    UnmuteConversation(request: BasicConversationRequest): Promise<MuteConversationResponse>;
    UserConversations(request: BasicConversationRequest): Promise<ConversationUserData>;
    Read(request: BasicConversationsRequest): Promise<Empty>;
    Subreddits(request: Empty): Promise<SubredditsResponse>;
    Unread(request: BasicConversationsRequest): Promise<Empty>;
    UnreadCount(request: Empty): Promise<UnreadCountResponse>;
}
export {};
//# sourceMappingURL=newmodmail_svc.twirp-client.d.ts.map