import { GenericPrivateMessagesRequest, ComposeRequest, ReadAllMessagesRequest, MessageWhereRequest } from './privatemessages_msg.js';
import { Empty } from '../../../../google/protobuf/empty.js';
import { Listing } from '../common/common_msg.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface PrivateMessagesClient {
    Block(request: GenericPrivateMessagesRequest): Promise<Empty>;
    CollapseMessage(request: GenericPrivateMessagesRequest): Promise<Empty>;
    Compose(request: ComposeRequest): Promise<Empty>;
    DelMsg(request: GenericPrivateMessagesRequest): Promise<Empty>;
    ReadAllMessages(request: ReadAllMessagesRequest): Promise<Empty>;
    ReadMessage(request: GenericPrivateMessagesRequest): Promise<Empty>;
    UnblockSubreddit(request: GenericPrivateMessagesRequest): Promise<Empty>;
    UncollapseMessage(request: GenericPrivateMessagesRequest): Promise<Empty>;
    UnreadMessage(request: GenericPrivateMessagesRequest): Promise<Empty>;
    MessageWhere(request: MessageWhereRequest): Promise<Listing>;
}
export declare class PrivateMessagesClientJSON implements PrivateMessagesClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Block(request: GenericPrivateMessagesRequest): Promise<Empty>;
    CollapseMessage(request: GenericPrivateMessagesRequest): Promise<Empty>;
    Compose(request: ComposeRequest): Promise<Empty>;
    DelMsg(request: GenericPrivateMessagesRequest): Promise<Empty>;
    ReadAllMessages(request: ReadAllMessagesRequest): Promise<Empty>;
    ReadMessage(request: GenericPrivateMessagesRequest): Promise<Empty>;
    UnblockSubreddit(request: GenericPrivateMessagesRequest): Promise<Empty>;
    UncollapseMessage(request: GenericPrivateMessagesRequest): Promise<Empty>;
    UnreadMessage(request: GenericPrivateMessagesRequest): Promise<Empty>;
    MessageWhere(request: MessageWhereRequest): Promise<Listing>;
}
export declare class PrivateMessagesClientProtobuf implements PrivateMessagesClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Block(request: GenericPrivateMessagesRequest): Promise<Empty>;
    CollapseMessage(request: GenericPrivateMessagesRequest): Promise<Empty>;
    Compose(request: ComposeRequest): Promise<Empty>;
    DelMsg(request: GenericPrivateMessagesRequest): Promise<Empty>;
    ReadAllMessages(request: ReadAllMessagesRequest): Promise<Empty>;
    ReadMessage(request: GenericPrivateMessagesRequest): Promise<Empty>;
    UnblockSubreddit(request: GenericPrivateMessagesRequest): Promise<Empty>;
    UncollapseMessage(request: GenericPrivateMessagesRequest): Promise<Empty>;
    UnreadMessage(request: GenericPrivateMessagesRequest): Promise<Empty>;
    MessageWhere(request: MessageWhereRequest): Promise<Listing>;
}
export {};
//# sourceMappingURL=privatemessages_svc.twirp-client.d.ts.map