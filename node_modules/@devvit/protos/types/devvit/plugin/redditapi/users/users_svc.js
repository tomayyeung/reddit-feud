/**
 * #users_svc.ts
 *
 * @packageDocumentation
 */
/* eslint-disable */
import _m0 from "protobufjs/minimal.js";
import { Empty } from "../../../../google/protobuf/empty.js";
import { BoolValue } from "../../../../google/protobuf/wrappers.js";
import { JsonStatus, Listing } from "../common/common_msg.js";
import { BlockUserRequest, BlockUserResponse, FriendRequest, GeneralFriendResponse, GenericUsersRequest, ReportUserRequest, SetPermissionsRequest, UnfriendRequest, UpdateFriendRelationshipRequest, UserAboutRequest, UserAboutResponse, UserDataByAccountIdsRequest, UserDataByAccountIdsResponse, UsernameAvailableRequest, UserTrophiesResponse, UserWhereRequest, } from "./users_msg.js";
export const UsersServiceName = "devvit.plugin.redditapi.users.Users";
export class UsersClientImpl {
    constructor(rpc, opts) {
        this.service = opts?.service || UsersServiceName;
        this.rpc = rpc;
        this.BlockUser = this.BlockUser.bind(this);
        this.Friend = this.Friend.bind(this);
        this.ReportUser = this.ReportUser.bind(this);
        this.SetPermissions = this.SetPermissions.bind(this);
        this.Unfriend = this.Unfriend.bind(this);
        this.UserDataByAccountIds = this.UserDataByAccountIds.bind(this);
        this.UsernameAvailable = this.UsernameAvailable.bind(this);
        this.UnfriendUser = this.UnfriendUser.bind(this);
        this.GetFriendInformation = this.GetFriendInformation.bind(this);
        this.UpdateFriendRelationship = this.UpdateFriendRelationship.bind(this);
        this.UserTrophies = this.UserTrophies.bind(this);
        this.UserAbout = this.UserAbout.bind(this);
        this.UserWhere = this.UserWhere.bind(this);
    }
    BlockUser(request, metadata) {
        const data = BlockUserRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "BlockUser", data, metadata);
        return promise.then((data) => BlockUserResponse.decode(_m0.Reader.create(data)));
    }
    Friend(request, metadata) {
        const data = FriendRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "Friend", data, metadata);
        return promise.then((data) => JsonStatus.decode(_m0.Reader.create(data)));
    }
    ReportUser(request, metadata) {
        const data = ReportUserRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "ReportUser", data, metadata);
        return promise.then((data) => Empty.decode(_m0.Reader.create(data)));
    }
    SetPermissions(request, metadata) {
        const data = SetPermissionsRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "SetPermissions", data, metadata);
        return promise.then((data) => JsonStatus.decode(_m0.Reader.create(data)));
    }
    Unfriend(request, metadata) {
        const data = UnfriendRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "Unfriend", data, metadata);
        return promise.then((data) => Empty.decode(_m0.Reader.create(data)));
    }
    UserDataByAccountIds(request, metadata) {
        const data = UserDataByAccountIdsRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "UserDataByAccountIds", data, metadata);
        return promise.then((data) => UserDataByAccountIdsResponse.decode(_m0.Reader.create(data)));
    }
    UsernameAvailable(request, metadata) {
        const data = UsernameAvailableRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "UsernameAvailable", data, metadata);
        return promise.then((data) => BoolValue.decode(_m0.Reader.create(data)));
    }
    UnfriendUser(request, metadata) {
        const data = GenericUsersRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "UnfriendUser", data, metadata);
        return promise.then((data) => Empty.decode(_m0.Reader.create(data)));
    }
    GetFriendInformation(request, metadata) {
        const data = GenericUsersRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "GetFriendInformation", data, metadata);
        return promise.then((data) => GeneralFriendResponse.decode(_m0.Reader.create(data)));
    }
    UpdateFriendRelationship(request, metadata) {
        const data = UpdateFriendRelationshipRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "UpdateFriendRelationship", data, metadata);
        return promise.then((data) => GeneralFriendResponse.decode(_m0.Reader.create(data)));
    }
    UserTrophies(request, metadata) {
        const data = GenericUsersRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "UserTrophies", data, metadata);
        return promise.then((data) => UserTrophiesResponse.decode(_m0.Reader.create(data)));
    }
    UserAbout(request, metadata) {
        const data = UserAboutRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "UserAbout", data, metadata);
        return promise.then((data) => UserAboutResponse.decode(_m0.Reader.create(data)));
    }
    UserWhere(request, metadata) {
        const data = UserWhereRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "UserWhere", data, metadata);
        return promise.then((data) => Listing.decode(_m0.Reader.create(data)));
    }
}
export const UsersDefinition = {
    name: "Users",
    fullName: "devvit.plugin.redditapi.users.Users",
    methods: {
        /** https://www.reddit.com/dev/api#POST_api_block_user */
        blockUser: {
            name: "BlockUser",
            requestType: BlockUserRequest,
            requestStream: false,
            responseType: BlockUserResponse,
            responseStream: false,
            options: {
                _unknownFields: {
                    480010: [
                        new Uint8Array([6, 10, 4, 80, 79, 83, 84]),
                        new Uint8Array([17, 18, 15, 47, 97, 112, 105, 47, 98, 108, 111, 99, 107, 95, 117, 115, 101, 114]),
                        new Uint8Array([2, 24, 4]),
                        new Uint8Array([2, 32, 1]),
                    ],
                },
            },
        },
        /** https://www.reddit.com/dev/api#POST_api_friend */
        friend: {
            name: "Friend",
            requestType: FriendRequest,
            requestStream: false,
            responseType: JsonStatus,
            responseStream: false,
            options: {
                _unknownFields: {
                    480010: [
                        new Uint8Array([6, 10, 4, 80, 79, 83, 84]),
                        new Uint8Array([
                            27,
                            18,
                            25,
                            47,
                            114,
                            47,
                            123,
                            115,
                            117,
                            98,
                            114,
                            101,
                            100,
                            100,
                            105,
                            116,
                            125,
                            47,
                            97,
                            112,
                            105,
                            47,
                            102,
                            114,
                            105,
                            101,
                            110,
                            100,
                        ]),
                        new Uint8Array([2, 24, 4]),
                        new Uint8Array([2, 32, 1]),
                    ],
                },
            },
        },
        /** https://www.reddit.com/dev/api#POST_api_report_user */
        reportUser: {
            name: "ReportUser",
            requestType: ReportUserRequest,
            requestStream: false,
            responseType: Empty,
            responseStream: false,
            options: {
                _unknownFields: {
                    480010: [
                        new Uint8Array([6, 10, 4, 80, 79, 83, 84]),
                        new Uint8Array([18, 18, 16, 47, 97, 112, 105, 47, 114, 101, 112, 111, 114, 116, 95, 117, 115, 101, 114]),
                        new Uint8Array([2, 24, 4]),
                    ],
                },
            },
        },
        /** https://www.reddit.com/dev/api#POST_api_setpermissions */
        setPermissions: {
            name: "SetPermissions",
            requestType: SetPermissionsRequest,
            requestStream: false,
            responseType: JsonStatus,
            responseStream: false,
            options: {
                _unknownFields: {
                    480010: [
                        new Uint8Array([6, 10, 4, 80, 79, 83, 84]),
                        new Uint8Array([
                            35,
                            18,
                            33,
                            47,
                            114,
                            47,
                            123,
                            115,
                            117,
                            98,
                            114,
                            101,
                            100,
                            100,
                            105,
                            116,
                            125,
                            47,
                            97,
                            112,
                            105,
                            47,
                            115,
                            101,
                            116,
                            112,
                            101,
                            114,
                            109,
                            105,
                            115,
                            115,
                            105,
                            111,
                            110,
                            115,
                        ]),
                        new Uint8Array([2, 24, 4]),
                        new Uint8Array([2, 32, 1]),
                    ],
                },
            },
        },
        /** https://www.reddit.com/dev/api#POST_api_unfriend */
        unfriend: {
            name: "Unfriend",
            requestType: UnfriendRequest,
            requestStream: false,
            responseType: Empty,
            responseStream: false,
            options: {
                _unknownFields: {
                    480010: [
                        new Uint8Array([6, 10, 4, 80, 79, 83, 84]),
                        new Uint8Array([
                            29,
                            18,
                            27,
                            47,
                            114,
                            47,
                            123,
                            115,
                            117,
                            98,
                            114,
                            101,
                            100,
                            100,
                            105,
                            116,
                            125,
                            47,
                            97,
                            112,
                            105,
                            47,
                            117,
                            110,
                            102,
                            114,
                            105,
                            101,
                            110,
                            100,
                        ]),
                        new Uint8Array([2, 24, 4]),
                    ],
                },
            },
        },
        /** https://www.reddit.com/dev/api#GET_api_user_data_by_account_ids */
        userDataByAccountIds: {
            name: "UserDataByAccountIds",
            requestType: UserDataByAccountIdsRequest,
            requestStream: false,
            responseType: UserDataByAccountIdsResponse,
            responseStream: false,
            options: {},
        },
        /** https://www.reddit.com/dev/api#GET_api_username_available */
        usernameAvailable: {
            name: "UsernameAvailable",
            requestType: UsernameAvailableRequest,
            requestStream: false,
            responseType: BoolValue,
            responseStream: false,
            options: {
                _unknownFields: {
                    480010: [
                        new Uint8Array([5, 10, 3, 71, 69, 84]),
                        new Uint8Array([
                            37,
                            18,
                            35,
                            47,
                            97,
                            112,
                            105,
                            47,
                            117,
                            115,
                            101,
                            114,
                            110,
                            97,
                            109,
                            101,
                            95,
                            97,
                            118,
                            97,
                            105,
                            108,
                            97,
                            98,
                            108,
                            101,
                            63,
                            117,
                            115,
                            101,
                            114,
                            61,
                            123,
                            117,
                            115,
                            101,
                            114,
                            125,
                        ]),
                        new Uint8Array([2, 64, 1]),
                    ],
                },
            },
        },
        /** https://www.reddit.com/dev/api#DELETE_api_v1_me_friends_username */
        unfriendUser: {
            name: "UnfriendUser",
            requestType: GenericUsersRequest,
            requestStream: false,
            responseType: Empty,
            responseStream: false,
            options: {
                _unknownFields: {
                    480010: [
                        new Uint8Array([8, 10, 6, 68, 69, 76, 69, 84, 69]),
                        new Uint8Array([
                            39,
                            18,
                            37,
                            47,
                            97,
                            112,
                            105,
                            47,
                            118,
                            49,
                            47,
                            109,
                            101,
                            47,
                            102,
                            114,
                            105,
                            101,
                            110,
                            100,
                            115,
                            47,
                            123,
                            117,
                            115,
                            101,
                            114,
                            110,
                            97,
                            109,
                            101,
                            125,
                            63,
                            105,
                            100,
                            61,
                            123,
                            105,
                            100,
                            125,
                        ]),
                    ],
                },
            },
        },
        /**
         * https://www.reddit.com/dev/api#GET_api_v1_me_friends_username
         * TODO: this actually returns a WrappedRedditObject. Fix this up after the system worker is deleted.
         */
        getFriendInformation: {
            name: "GetFriendInformation",
            requestType: GenericUsersRequest,
            requestStream: false,
            responseType: GeneralFriendResponse,
            responseStream: false,
            options: {
                _unknownFields: {
                    480010: [
                        new Uint8Array([5, 10, 3, 71, 69, 84]),
                        new Uint8Array([
                            39,
                            18,
                            37,
                            47,
                            97,
                            112,
                            105,
                            47,
                            118,
                            49,
                            47,
                            109,
                            101,
                            47,
                            102,
                            114,
                            105,
                            101,
                            110,
                            100,
                            115,
                            47,
                            123,
                            117,
                            115,
                            101,
                            114,
                            110,
                            97,
                            109,
                            101,
                            125,
                            63,
                            105,
                            100,
                            61,
                            123,
                            105,
                            100,
                            125,
                        ]),
                    ],
                },
            },
        },
        /** https://www.reddit.com/dev/api#PUT_api_v1_me_friends_username */
        updateFriendRelationship: {
            name: "UpdateFriendRelationship",
            requestType: UpdateFriendRelationshipRequest,
            requestStream: false,
            responseType: GeneralFriendResponse,
            responseStream: false,
            options: {
                _unknownFields: {
                    480010: [
                        new Uint8Array([5, 10, 3, 80, 85, 84]),
                        new Uint8Array([
                            27,
                            18,
                            25,
                            47,
                            97,
                            112,
                            105,
                            47,
                            118,
                            49,
                            47,
                            109,
                            101,
                            47,
                            102,
                            114,
                            105,
                            101,
                            110,
                            100,
                            115,
                            47,
                            123,
                            110,
                            97,
                            109,
                            101,
                            125,
                        ]),
                        new Uint8Array([2, 24, 1]),
                    ],
                },
            },
        },
        /** https://www.reddit.com/dev/api#GET_api_v1_user_username_trophies */
        userTrophies: {
            name: "UserTrophies",
            requestType: GenericUsersRequest,
            requestStream: false,
            responseType: UserTrophiesResponse,
            responseStream: false,
            options: {
                _unknownFields: {
                    480010: [
                        new Uint8Array([5, 10, 3, 71, 69, 84]),
                        new Uint8Array([
                            42,
                            18,
                            40,
                            47,
                            97,
                            112,
                            105,
                            47,
                            118,
                            49,
                            47,
                            117,
                            115,
                            101,
                            114,
                            47,
                            123,
                            117,
                            115,
                            101,
                            114,
                            110,
                            97,
                            109,
                            101,
                            125,
                            47,
                            116,
                            114,
                            111,
                            112,
                            104,
                            105,
                            101,
                            115,
                            63,
                            105,
                            100,
                            61,
                            123,
                            105,
                            100,
                            125,
                        ]),
                    ],
                },
            },
        },
        /** https://www.reddit.com/dev/api#GET_user_username_about */
        userAbout: {
            name: "UserAbout",
            requestType: UserAboutRequest,
            requestStream: false,
            responseType: UserAboutResponse,
            responseStream: false,
            options: {
                _unknownFields: {
                    480010: [
                        new Uint8Array([5, 10, 3, 71, 69, 84]),
                        new Uint8Array([
                            24,
                            18,
                            22,
                            47,
                            117,
                            115,
                            101,
                            114,
                            47,
                            123,
                            117,
                            115,
                            101,
                            114,
                            110,
                            97,
                            109,
                            101,
                            125,
                            47,
                            97,
                            98,
                            111,
                            117,
                            116,
                        ]),
                    ],
                },
            },
        },
        /** https://www.reddit.com/dev/api#GET_user_username_where */
        userWhere: {
            name: "UserWhere",
            requestType: UserWhereRequest,
            requestStream: false,
            responseType: Listing,
            responseStream: false,
            options: {
                _unknownFields: {
                    480010: [
                        new Uint8Array([5, 10, 3, 71, 69, 84]),
                        new Uint8Array([
                            145,
                            1,
                            18,
                            142,
                            1,
                            47,
                            117,
                            115,
                            101,
                            114,
                            47,
                            123,
                            117,
                            115,
                            101,
                            114,
                            110,
                            97,
                            109,
                            101,
                            125,
                            47,
                            123,
                            119,
                            104,
                            101,
                            114,
                            101,
                            125,
                            63,
                            99,
                            111,
                            110,
                            116,
                            101,
                            120,
                            116,
                            61,
                            123,
                            99,
                            111,
                            110,
                            116,
                            101,
                            120,
                            116,
                            125,
                            38,
                            115,
                            104,
                            111,
                            119,
                            61,
                            123,
                            115,
                            104,
                            111,
                            119,
                            125,
                            38,
                            115,
                            111,
                            114,
                            116,
                            61,
                            123,
                            115,
                            111,
                            114,
                            116,
                            125,
                            38,
                            116,
                            61,
                            123,
                            116,
                            125,
                            38,
                            116,
                            121,
                            112,
                            101,
                            61,
                            123,
                            116,
                            121,
                            112,
                            101,
                            125,
                            38,
                            97,
                            102,
                            116,
                            101,
                            114,
                            61,
                            123,
                            97,
                            102,
                            116,
                            101,
                            114,
                            125,
                            38,
                            98,
                            101,
                            102,
                            111,
                            114,
                            101,
                            61,
                            123,
                            98,
                            101,
                            102,
                            111,
                            114,
                            101,
                            125,
                            38,
                            99,
                            111,
                            117,
                            110,
                            116,
                            61,
                            123,
                            99,
                            111,
                            117,
                            110,
                            116,
                            125,
                            38,
                            108,
                            105,
                            109,
                            105,
                            116,
                            61,
                            123,
                            108,
                            105,
                            109,
                            105,
                            116,
                            125,
                        ]),
                    ],
                },
            },
        },
    },
};
