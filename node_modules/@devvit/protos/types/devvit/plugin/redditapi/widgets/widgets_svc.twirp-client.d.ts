import { AddButtonWidgetRequest, ButtonWidget, AddImageWidgetRequest, ImageWidget, AddCalendarWidgetRequest, CalendarWidget, AddTextAreaWidgetRequest, TextAreaWidget, AddCommunityListWidgetRequest, CommunityListWidget, AddPostFlairWidgetRequest, PostFlairWidget, AddCustomWidgetRequest, CustomWidget, DeleteWidgetRequest, UpdateButtonWidgetRequest, UpdateImageWidgetRequest, UpdateCalendarWidgetRequest, UpdateTextAreaWidgetRequest, UpdateCommunityListWidgetRequest, UpdateCommunityListWidgetResponse, UpdatePostFlairWidgetRequest, UpdateCustomWidgetRequest, GetWidgetImageUploadLeaseRequest, GetWidgetImageUploadLeaseResponse, OrderWidgetsRequest, GetWidgetsRequest, GetWidgetsResponse } from './widgets_msg.js';
import { Empty } from '../../../../google/protobuf/empty.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface WidgetsClient {
    AddButtonWidget(request: AddButtonWidgetRequest): Promise<ButtonWidget>;
    AddImageWidget(request: AddImageWidgetRequest): Promise<ImageWidget>;
    AddCalendarWidget(request: AddCalendarWidgetRequest): Promise<CalendarWidget>;
    AddTextAreaWidget(request: AddTextAreaWidgetRequest): Promise<TextAreaWidget>;
    AddCommunityListWidget(request: AddCommunityListWidgetRequest): Promise<CommunityListWidget>;
    AddPostFlairWidget(request: AddPostFlairWidgetRequest): Promise<PostFlairWidget>;
    AddCustomWidget(request: AddCustomWidgetRequest): Promise<CustomWidget>;
    DeleteWidget(request: DeleteWidgetRequest): Promise<Empty>;
    UpdateButtonWidget(request: UpdateButtonWidgetRequest): Promise<ButtonWidget>;
    UpdateImageWidget(request: UpdateImageWidgetRequest): Promise<ImageWidget>;
    UpdateCalendarWidget(request: UpdateCalendarWidgetRequest): Promise<CalendarWidget>;
    UpdateTextAreaWidget(request: UpdateTextAreaWidgetRequest): Promise<TextAreaWidget>;
    UpdateCommunityListWidget(request: UpdateCommunityListWidgetRequest): Promise<UpdateCommunityListWidgetResponse>;
    UpdatePostFlairWidget(request: UpdatePostFlairWidgetRequest): Promise<PostFlairWidget>;
    UpdateCustomWidget(request: UpdateCustomWidgetRequest): Promise<CustomWidget>;
    GetWidgetImageUploadLease(request: GetWidgetImageUploadLeaseRequest): Promise<GetWidgetImageUploadLeaseResponse>;
    OrderWidgets(request: OrderWidgetsRequest): Promise<Empty>;
    GetWidgets(request: GetWidgetsRequest): Promise<GetWidgetsResponse>;
}
export declare class WidgetsClientJSON implements WidgetsClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    AddButtonWidget(request: AddButtonWidgetRequest): Promise<ButtonWidget>;
    AddImageWidget(request: AddImageWidgetRequest): Promise<ImageWidget>;
    AddCalendarWidget(request: AddCalendarWidgetRequest): Promise<CalendarWidget>;
    AddTextAreaWidget(request: AddTextAreaWidgetRequest): Promise<TextAreaWidget>;
    AddCommunityListWidget(request: AddCommunityListWidgetRequest): Promise<CommunityListWidget>;
    AddPostFlairWidget(request: AddPostFlairWidgetRequest): Promise<PostFlairWidget>;
    AddCustomWidget(request: AddCustomWidgetRequest): Promise<CustomWidget>;
    DeleteWidget(request: DeleteWidgetRequest): Promise<Empty>;
    UpdateButtonWidget(request: UpdateButtonWidgetRequest): Promise<ButtonWidget>;
    UpdateImageWidget(request: UpdateImageWidgetRequest): Promise<ImageWidget>;
    UpdateCalendarWidget(request: UpdateCalendarWidgetRequest): Promise<CalendarWidget>;
    UpdateTextAreaWidget(request: UpdateTextAreaWidgetRequest): Promise<TextAreaWidget>;
    UpdateCommunityListWidget(request: UpdateCommunityListWidgetRequest): Promise<UpdateCommunityListWidgetResponse>;
    UpdatePostFlairWidget(request: UpdatePostFlairWidgetRequest): Promise<PostFlairWidget>;
    UpdateCustomWidget(request: UpdateCustomWidgetRequest): Promise<CustomWidget>;
    GetWidgetImageUploadLease(request: GetWidgetImageUploadLeaseRequest): Promise<GetWidgetImageUploadLeaseResponse>;
    OrderWidgets(request: OrderWidgetsRequest): Promise<Empty>;
    GetWidgets(request: GetWidgetsRequest): Promise<GetWidgetsResponse>;
}
export declare class WidgetsClientProtobuf implements WidgetsClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    AddButtonWidget(request: AddButtonWidgetRequest): Promise<ButtonWidget>;
    AddImageWidget(request: AddImageWidgetRequest): Promise<ImageWidget>;
    AddCalendarWidget(request: AddCalendarWidgetRequest): Promise<CalendarWidget>;
    AddTextAreaWidget(request: AddTextAreaWidgetRequest): Promise<TextAreaWidget>;
    AddCommunityListWidget(request: AddCommunityListWidgetRequest): Promise<CommunityListWidget>;
    AddPostFlairWidget(request: AddPostFlairWidgetRequest): Promise<PostFlairWidget>;
    AddCustomWidget(request: AddCustomWidgetRequest): Promise<CustomWidget>;
    DeleteWidget(request: DeleteWidgetRequest): Promise<Empty>;
    UpdateButtonWidget(request: UpdateButtonWidgetRequest): Promise<ButtonWidget>;
    UpdateImageWidget(request: UpdateImageWidgetRequest): Promise<ImageWidget>;
    UpdateCalendarWidget(request: UpdateCalendarWidgetRequest): Promise<CalendarWidget>;
    UpdateTextAreaWidget(request: UpdateTextAreaWidgetRequest): Promise<TextAreaWidget>;
    UpdateCommunityListWidget(request: UpdateCommunityListWidgetRequest): Promise<UpdateCommunityListWidgetResponse>;
    UpdatePostFlairWidget(request: UpdatePostFlairWidgetRequest): Promise<PostFlairWidget>;
    UpdateCustomWidget(request: UpdateCustomWidgetRequest): Promise<CustomWidget>;
    GetWidgetImageUploadLease(request: GetWidgetImageUploadLeaseRequest): Promise<GetWidgetImageUploadLeaseResponse>;
    OrderWidgets(request: OrderWidgetsRequest): Promise<Empty>;
    GetWidgets(request: GetWidgetsRequest): Promise<GetWidgetsResponse>;
}
export {};
//# sourceMappingURL=widgets_svc.twirp-client.d.ts.map