/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { AddButtonWidgetRequest, ButtonWidget, AddImageWidgetRequest, ImageWidget, AddCalendarWidgetRequest, CalendarWidget, AddTextAreaWidgetRequest, TextAreaWidget, AddCommunityListWidgetRequest, CommunityListWidget, AddPostFlairWidgetRequest, PostFlairWidget, AddCustomWidgetRequest, CustomWidget, DeleteWidgetRequest, UpdateButtonWidgetRequest, UpdateImageWidgetRequest, UpdateCalendarWidgetRequest, UpdateTextAreaWidgetRequest, UpdateCommunityListWidgetRequest, UpdateCommunityListWidgetResponse, UpdatePostFlairWidgetRequest, UpdateCustomWidgetRequest, GetWidgetImageUploadLeaseRequest, GetWidgetImageUploadLeaseResponse, OrderWidgetsRequest, GetWidgetsRequest, GetWidgetsResponse } from './widgets_msg.js';
import { Empty } from '../../../../google/protobuf/empty.js';
export interface WidgetsTwirp<T extends TwirpContext = TwirpContext> {
    AddButtonWidget(ctx: T, request: AddButtonWidgetRequest): Promise<ButtonWidget>;
    AddImageWidget(ctx: T, request: AddImageWidgetRequest): Promise<ImageWidget>;
    AddCalendarWidget(ctx: T, request: AddCalendarWidgetRequest): Promise<CalendarWidget>;
    AddTextAreaWidget(ctx: T, request: AddTextAreaWidgetRequest): Promise<TextAreaWidget>;
    AddCommunityListWidget(ctx: T, request: AddCommunityListWidgetRequest): Promise<CommunityListWidget>;
    AddPostFlairWidget(ctx: T, request: AddPostFlairWidgetRequest): Promise<PostFlairWidget>;
    AddCustomWidget(ctx: T, request: AddCustomWidgetRequest): Promise<CustomWidget>;
    DeleteWidget(ctx: T, request: DeleteWidgetRequest): Promise<Empty>;
    UpdateButtonWidget(ctx: T, request: UpdateButtonWidgetRequest): Promise<ButtonWidget>;
    UpdateImageWidget(ctx: T, request: UpdateImageWidgetRequest): Promise<ImageWidget>;
    UpdateCalendarWidget(ctx: T, request: UpdateCalendarWidgetRequest): Promise<CalendarWidget>;
    UpdateTextAreaWidget(ctx: T, request: UpdateTextAreaWidgetRequest): Promise<TextAreaWidget>;
    UpdateCommunityListWidget(ctx: T, request: UpdateCommunityListWidgetRequest): Promise<UpdateCommunityListWidgetResponse>;
    UpdatePostFlairWidget(ctx: T, request: UpdatePostFlairWidgetRequest): Promise<PostFlairWidget>;
    UpdateCustomWidget(ctx: T, request: UpdateCustomWidgetRequest): Promise<CustomWidget>;
    GetWidgetImageUploadLease(ctx: T, request: GetWidgetImageUploadLeaseRequest): Promise<GetWidgetImageUploadLeaseResponse>;
    OrderWidgets(ctx: T, request: OrderWidgetsRequest): Promise<Empty>;
    GetWidgets(ctx: T, request: GetWidgetsRequest): Promise<GetWidgetsResponse>;
}
export declare enum WidgetsMethod {
    AddButtonWidget = "AddButtonWidget",
    AddImageWidget = "AddImageWidget",
    AddCalendarWidget = "AddCalendarWidget",
    AddTextAreaWidget = "AddTextAreaWidget",
    AddCommunityListWidget = "AddCommunityListWidget",
    AddPostFlairWidget = "AddPostFlairWidget",
    AddCustomWidget = "AddCustomWidget",
    DeleteWidget = "DeleteWidget",
    UpdateButtonWidget = "UpdateButtonWidget",
    UpdateImageWidget = "UpdateImageWidget",
    UpdateCalendarWidget = "UpdateCalendarWidget",
    UpdateTextAreaWidget = "UpdateTextAreaWidget",
    UpdateCommunityListWidget = "UpdateCommunityListWidget",
    UpdatePostFlairWidget = "UpdatePostFlairWidget",
    UpdateCustomWidget = "UpdateCustomWidget",
    GetWidgetImageUploadLease = "GetWidgetImageUploadLease",
    OrderWidgets = "OrderWidgets",
    GetWidgets = "GetWidgets"
}
export declare const WidgetsMethodList: WidgetsMethod[];
export declare function createWidgetsServer<T extends TwirpContext = TwirpContext>(service: WidgetsTwirp<T>): TwirpServer<WidgetsTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=widgets_svc.twirp.d.ts.map