import { GetWikiPagesRequest, GetWikiPagesResponse, GetWikiPageRequest, GetWikiPageResponse, EditWikiPageRequest, HideWikiPageRevisionRequest, HideWikiPageRevisionResponse, GetWikiPageRevisionsRequest, WikiPageRevisionListing, GetWikiRevisionsRequest, RevertWikiPageRequest, GetWikiPageSettingsRequest, WikiPageSettings, UpdateWikiPageSettingsRequest, AllowEditorRequest } from './wiki_msg.js';
import { Empty } from '../../../../google/protobuf/empty.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface WikiClient {
    GetWikiPages(request: GetWikiPagesRequest): Promise<GetWikiPagesResponse>;
    GetWikiPage(request: GetWikiPageRequest): Promise<GetWikiPageResponse>;
    EditWikiPage(request: EditWikiPageRequest): Promise<Empty>;
    HideWikiPageRevision(request: HideWikiPageRevisionRequest): Promise<HideWikiPageRevisionResponse>;
    GetWikiPageRevisions(request: GetWikiPageRevisionsRequest): Promise<WikiPageRevisionListing>;
    GetWikiRevisions(request: GetWikiRevisionsRequest): Promise<WikiPageRevisionListing>;
    RevertWikiPage(request: RevertWikiPageRequest): Promise<Empty>;
    GetWikiPageSettings(request: GetWikiPageSettingsRequest): Promise<WikiPageSettings>;
    UpdateWikiPageSettings(request: UpdateWikiPageSettingsRequest): Promise<WikiPageSettings>;
    AllowEditor(request: AllowEditorRequest): Promise<Empty>;
}
export declare class WikiClientJSON implements WikiClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    GetWikiPages(request: GetWikiPagesRequest): Promise<GetWikiPagesResponse>;
    GetWikiPage(request: GetWikiPageRequest): Promise<GetWikiPageResponse>;
    EditWikiPage(request: EditWikiPageRequest): Promise<Empty>;
    HideWikiPageRevision(request: HideWikiPageRevisionRequest): Promise<HideWikiPageRevisionResponse>;
    GetWikiPageRevisions(request: GetWikiPageRevisionsRequest): Promise<WikiPageRevisionListing>;
    GetWikiRevisions(request: GetWikiRevisionsRequest): Promise<WikiPageRevisionListing>;
    RevertWikiPage(request: RevertWikiPageRequest): Promise<Empty>;
    GetWikiPageSettings(request: GetWikiPageSettingsRequest): Promise<WikiPageSettings>;
    UpdateWikiPageSettings(request: UpdateWikiPageSettingsRequest): Promise<WikiPageSettings>;
    AllowEditor(request: AllowEditorRequest): Promise<Empty>;
}
export declare class WikiClientProtobuf implements WikiClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    GetWikiPages(request: GetWikiPagesRequest): Promise<GetWikiPagesResponse>;
    GetWikiPage(request: GetWikiPageRequest): Promise<GetWikiPageResponse>;
    EditWikiPage(request: EditWikiPageRequest): Promise<Empty>;
    HideWikiPageRevision(request: HideWikiPageRevisionRequest): Promise<HideWikiPageRevisionResponse>;
    GetWikiPageRevisions(request: GetWikiPageRevisionsRequest): Promise<WikiPageRevisionListing>;
    GetWikiRevisions(request: GetWikiRevisionsRequest): Promise<WikiPageRevisionListing>;
    RevertWikiPage(request: RevertWikiPageRequest): Promise<Empty>;
    GetWikiPageSettings(request: GetWikiPageSettingsRequest): Promise<WikiPageSettings>;
    UpdateWikiPageSettings(request: UpdateWikiPageSettingsRequest): Promise<WikiPageSettings>;
    AllowEditor(request: AllowEditorRequest): Promise<Empty>;
}
export {};
//# sourceMappingURL=wiki_svc.twirp-client.d.ts.map