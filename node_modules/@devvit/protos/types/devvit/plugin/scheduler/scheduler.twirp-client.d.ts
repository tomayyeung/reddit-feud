import { ScheduledActionRequest, ScheduledActionResponse, CancelActionRequest, ListActionRequest, ListActionResponse } from './scheduler.js';
import { Empty } from '../../../google/protobuf/empty.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface SchedulerClient {
    Schedule(request: ScheduledActionRequest): Promise<ScheduledActionResponse>;
    Cancel(request: CancelActionRequest): Promise<Empty>;
    List(request: ListActionRequest): Promise<ListActionResponse>;
}
export declare class SchedulerClientJSON implements SchedulerClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Schedule(request: ScheduledActionRequest): Promise<ScheduledActionResponse>;
    Cancel(request: CancelActionRequest): Promise<Empty>;
    List(request: ListActionRequest): Promise<ListActionResponse>;
}
export declare class SchedulerClientProtobuf implements SchedulerClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Schedule(request: ScheduledActionRequest): Promise<ScheduledActionResponse>;
    Cancel(request: CancelActionRequest): Promise<Empty>;
    List(request: ListActionRequest): Promise<ListActionResponse>;
}
export {};
//# sourceMappingURL=scheduler.twirp-client.d.ts.map