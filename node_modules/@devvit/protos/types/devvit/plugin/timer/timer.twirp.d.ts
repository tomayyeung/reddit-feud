/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { TimerMessage } from './timer.js';
import { Empty } from '../../../google/protobuf/empty.js';
export interface TimerTwirp<T extends TwirpContext = TwirpContext> {
    Wait(ctx: T, request: TimerMessage): Promise<Empty>;
}
export declare enum TimerMethod {
    Wait = "Wait"
}
export declare const TimerMethodList: TimerMethod[];
export declare function createTimerServer<T extends TwirpContext = TwirpContext>(service: TimerTwirp<T>): TwirpServer<TimerTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=timer.twirp.d.ts.map