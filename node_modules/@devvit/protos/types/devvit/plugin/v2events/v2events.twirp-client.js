import { V2EventsPublishRequest, V2EventsPublishResponse } from './v2events.js';
export class V2EventsClientJSON {
    constructor(rpc) {
        this.rpc = rpc;
        this.Publish.bind(this);
    }
    Publish(request) {
        const data = V2EventsPublishRequest.toJSON(request);
        const promise = this.rpc.request('devvit.plugin.v2events.V2Events', 'Publish', 'application/json', data);
        return promise.then((data) => V2EventsPublishResponse.fromJSON(data));
    }
}
export class V2EventsClientProtobuf {
    constructor(rpc) {
        this.rpc = rpc;
        this.Publish.bind(this);
    }
    Publish(request) {
        const data = V2EventsPublishRequest.encode(request).finish();
        const promise = this.rpc.request('devvit.plugin.v2events.V2Events', 'Publish', 'application/protobuf', data);
        return promise.then((data) => V2EventsPublishResponse.decode(data));
    }
}
