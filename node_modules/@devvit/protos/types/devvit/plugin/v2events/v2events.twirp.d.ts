/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { V2EventsPublishRequest, V2EventsPublishResponse } from './v2events.js';
export interface V2EventsTwirp<T extends TwirpContext = TwirpContext> {
    Publish(ctx: T, request: V2EventsPublishRequest): Promise<V2EventsPublishResponse>;
}
export declare enum V2EventsMethod {
    Publish = "Publish"
}
export declare const V2EventsMethodList: V2EventsMethod[];
export declare function createV2EventsServer<T extends TwirpContext = TwirpContext>(service: V2EventsTwirp<T>): TwirpServer<V2EventsTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=v2events.twirp.d.ts.map