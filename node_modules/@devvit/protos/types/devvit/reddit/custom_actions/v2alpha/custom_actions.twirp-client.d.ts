import { GetActionsRequest, GetActionsResponse, OnActionRequest, OnActionResponse } from './custom_actions.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface CustomActionsClient {
    GetActions(request: GetActionsRequest): Promise<GetActionsResponse>;
    OnAction(request: OnActionRequest): Promise<OnActionResponse>;
}
export declare class CustomActionsClientJSON implements CustomActionsClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    GetActions(request: GetActionsRequest): Promise<GetActionsResponse>;
    OnAction(request: OnActionRequest): Promise<OnActionResponse>;
}
export declare class CustomActionsClientProtobuf implements CustomActionsClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    GetActions(request: GetActionsRequest): Promise<GetActionsResponse>;
    OnAction(request: OnActionRequest): Promise<OnActionResponse>;
}
export {};
//# sourceMappingURL=custom_actions.twirp-client.d.ts.map