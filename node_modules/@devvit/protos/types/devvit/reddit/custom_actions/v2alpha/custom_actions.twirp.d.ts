/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { GetActionsRequest, GetActionsResponse, OnActionRequest, OnActionResponse } from './custom_actions.js';
export interface CustomActionsTwirp<T extends TwirpContext = TwirpContext> {
    GetActions(ctx: T, request: GetActionsRequest): Promise<GetActionsResponse>;
    OnAction(ctx: T, request: OnActionRequest): Promise<OnActionResponse>;
}
export declare enum CustomActionsMethod {
    GetActions = "GetActions",
    OnAction = "OnAction"
}
export declare const CustomActionsMethodList: CustomActionsMethod[];
export declare function createCustomActionsServer<T extends TwirpContext = TwirpContext>(service: CustomActionsTwirp<T>): TwirpServer<CustomActionsTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=custom_actions.twirp.d.ts.map