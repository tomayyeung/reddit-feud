/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { RenderPostRequest, RenderPostResponse } from './custom_post.js';
import { UIRequest, UIResponse } from '../../../ui/block_kit/v1beta/ui.js';
export interface CustomPostTwirp<T extends TwirpContext = TwirpContext> {
    RenderPost(ctx: T, request: RenderPostRequest): Promise<RenderPostResponse>;
    RenderPostContent(ctx: T, request: UIRequest): Promise<UIResponse>;
    RenderPostComposer(ctx: T, request: UIRequest): Promise<UIResponse>;
}
export declare enum CustomPostMethod {
    RenderPost = "RenderPost",
    RenderPostContent = "RenderPostContent",
    RenderPostComposer = "RenderPostComposer"
}
export declare const CustomPostMethodList: CustomPostMethod[];
export declare function createCustomPostServer<T extends TwirpContext = TwirpContext>(service: CustomPostTwirp<T>): TwirpServer<CustomPostTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=custom_post.twirp.d.ts.map