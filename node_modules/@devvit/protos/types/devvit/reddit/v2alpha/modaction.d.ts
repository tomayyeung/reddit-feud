/**
 * #modaction.ts
 *
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
import { CommentV2 } from "./commentv2.js";
import { PostV2 } from "./postv2.js";
import { SubredditV2 } from "./subredditv2.js";
import { UserV2 } from "./userv2.js";
export declare enum ModActionType {
    UNKNOWN = 0,
    REMOVE_POST = 1,
    REMOVE_COMMENT = 2,
    APPROVE_POST = 3,
    APPROVE_COMMENT = 4,
    EDIT_POST_FLAIR = 5,
    EDIT_USER_FLAIR = 6,
    LOCK_POST = 7,
    LOCK_COMMENT = 8,
    SPAM_POST = 9,
    SPAM_COMMENT = 10,
    DISTINGUISH_POST = 11,
    DISTINGUISH_COMMENT = 12,
    STICKY_POST = 13,
    STICKY_COMMENT = 14,
    UNRECOGNIZED = -1
}
export declare function modActionTypeFromJSON(object: any): ModActionType;
export declare function modActionTypeToJSON(object: ModActionType): number;
export interface ModAction {
    /**
     * Replaces the action_type enum. The same string used internally (e.g. "removelink")
     * Marking as optional only for typescript compatibility (public-api).
     */
    action?: string | undefined;
    actionedAt?: Date | undefined;
    subreddit?: SubredditV2 | undefined;
    moderator?: UserV2 | undefined;
    targetUser?: UserV2 | undefined;
    targetComment?: CommentV2 | undefined;
    targetPost?: PostV2 | undefined;
}
export declare const ModAction: {
    $type: "devvit.reddit.v2alpha.ModAction";
    encode(message: ModAction, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ModAction;
    fromJSON(object: any): ModAction;
    toJSON(message: ModAction): unknown;
    create(base?: DeepPartial<ModAction>): ModAction;
    fromPartial(object: DeepPartial<ModAction>): ModAction;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=modaction.d.ts.map