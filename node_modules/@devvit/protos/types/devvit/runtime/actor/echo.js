/**
 * #echo.ts
 *
 * @packageDocumentation
 */
/* eslint-disable */
import _m0 from "protobufjs/minimal.js";
import { StringValue } from "../../../google/protobuf/wrappers.js";
export const EchoServiceName = "devvit.runtime.actor.Echo";
export class EchoClientImpl {
    constructor(rpc, opts) {
        this.service = opts?.service || EchoServiceName;
        this.rpc = rpc;
        this.Echo = this.Echo.bind(this);
    }
    Echo(request, metadata) {
        const data = StringValue.encode(request).finish();
        const promise = this.rpc.request(this.service, "Echo", data, metadata);
        return promise.then((data) => StringValue.decode(_m0.Reader.create(data)));
    }
}
export const EchoDefinition = {
    name: "Echo",
    fullName: "devvit.runtime.actor.Echo",
    methods: {
        echo: {
            name: "Echo",
            requestType: StringValue,
            requestStream: false,
            responseType: StringValue,
            responseStream: false,
            options: {},
        },
    },
};
