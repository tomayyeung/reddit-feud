import { StringValue } from '../../../google/protobuf/wrappers.js';
export class EchoClientJSON {
    constructor(rpc) {
        this.rpc = rpc;
        this.Echo.bind(this);
    }
    Echo(request) {
        const data = StringValue.toJSON(request);
        const promise = this.rpc.request('devvit.runtime.actor.Echo', 'Echo', 'application/json', data);
        return promise.then((data) => StringValue.fromJSON(data));
    }
}
export class EchoClientProtobuf {
    constructor(rpc) {
        this.rpc = rpc;
        this.Echo.bind(this);
    }
    Echo(request) {
        const data = StringValue.encode(request).finish();
        const promise = this.rpc.request('devvit.runtime.actor.Echo', 'Echo', 'application/protobuf', data);
        return promise.then((data) => StringValue.decode(data));
    }
}
