/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { StringValue } from '../../../google/protobuf/wrappers.js';
export interface EchoTwirp<T extends TwirpContext = TwirpContext> {
    Echo(ctx: T, request: StringValue): Promise<StringValue>;
}
export declare enum EchoMethod {
    Echo = "Echo"
}
export declare const EchoMethodList: EchoMethod[];
export declare function createEchoServer<T extends TwirpContext = TwirpContext>(service: EchoTwirp<T>): TwirpServer<EchoTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=echo.twirp.d.ts.map