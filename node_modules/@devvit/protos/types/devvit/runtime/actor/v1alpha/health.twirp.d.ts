/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { Empty } from '../../../../google/protobuf/empty.js';
import { HealthStatus } from './health.js';
export interface HealthTwirp<T extends TwirpContext = TwirpContext> {
    Check(ctx: T, request: Empty): Promise<HealthStatus>;
}
export declare enum HealthMethod {
    Check = "Check"
}
export declare const HealthMethodList: HealthMethod[];
export declare function createHealthServer<T extends TwirpContext = TwirpContext>(service: HealthTwirp<T>): TwirpServer<HealthTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=health.twirp.d.ts.map