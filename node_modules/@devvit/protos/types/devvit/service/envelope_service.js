/**
 * #envelope_service.ts
 *
 * @packageDocumentation
 */
/* eslint-disable */
import _m0 from "protobufjs/minimal.js";
import { Empty } from "../../google/protobuf/empty.js";
import { Envelope } from "../runtime/envelope.js";
export const EnvelopeReceiverPortServiceName = "devvit.service.EnvelopeReceiverPort";
export class EnvelopeReceiverPortClientImpl {
    constructor(rpc, opts) {
        this.service = opts?.service || EnvelopeReceiverPortServiceName;
        this.rpc = rpc;
        this.Post = this.Post.bind(this);
    }
    Post(request, metadata) {
        const data = Envelope.encode(request).finish();
        const promise = this.rpc.request(this.service, "Post", data, metadata);
        return promise.then((data) => Empty.decode(_m0.Reader.create(data)));
    }
}
export const EnvelopeReceiverPortDefinition = {
    name: "EnvelopeReceiverPort",
    fullName: "devvit.service.EnvelopeReceiverPort",
    methods: {
        post: {
            name: "Post",
            requestType: Envelope,
            requestStream: false,
            responseType: Empty,
            responseStream: false,
            options: {},
        },
    },
};
