import { Envelope } from '../runtime/envelope.js';
import { Empty } from '../../google/protobuf/empty.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface EnvelopeReceiverPortClient {
    Post(request: Envelope): Promise<Empty>;
}
export declare class EnvelopeReceiverPortClientJSON implements EnvelopeReceiverPortClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Post(request: Envelope): Promise<Empty>;
}
export declare class EnvelopeReceiverPortClientProtobuf implements EnvelopeReceiverPortClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Post(request: Envelope): Promise<Empty>;
}
export {};
//# sourceMappingURL=envelope_service.twirp-client.d.ts.map