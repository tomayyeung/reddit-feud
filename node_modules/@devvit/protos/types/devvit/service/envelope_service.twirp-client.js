import { Envelope } from '../runtime/envelope.js';
import { Empty } from '../../google/protobuf/empty.js';
export class EnvelopeReceiverPortClientJSON {
    constructor(rpc) {
        this.rpc = rpc;
        this.Post.bind(this);
    }
    Post(request) {
        const data = Envelope.toJSON(request);
        const promise = this.rpc.request('devvit.service.EnvelopeReceiverPort', 'Post', 'application/json', data);
        return promise.then((data) => Empty.fromJSON(data));
    }
}
export class EnvelopeReceiverPortClientProtobuf {
    constructor(rpc) {
        this.rpc = rpc;
        this.Post.bind(this);
    }
    Post(request) {
        const data = Envelope.encode(request).finish();
        const promise = this.rpc.request('devvit.service.EnvelopeReceiverPort', 'Post', 'application/protobuf', data);
        return promise.then((data) => Empty.decode(data));
    }
}
