/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { Envelope } from '../runtime/envelope.js';
import { Empty } from '../../google/protobuf/empty.js';
export interface EnvelopeReceiverPortTwirp<T extends TwirpContext = TwirpContext> {
    Post(ctx: T, request: Envelope): Promise<Empty>;
}
export declare enum EnvelopeReceiverPortMethod {
    Post = "Post"
}
export declare const EnvelopeReceiverPortMethodList: EnvelopeReceiverPortMethod[];
export declare function createEnvelopeReceiverPortServer<T extends TwirpContext = TwirpContext>(service: EnvelopeReceiverPortTwirp<T>): TwirpServer<EnvelopeReceiverPortTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=envelope_service.twirp.d.ts.map