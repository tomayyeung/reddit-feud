/**
 * #create_order.ts
 *
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
export declare enum OrderResultStatus {
    STATUS_CANCELLED = 0,
    STATUS_SUCCESS = 1,
    STATUS_ERROR = 2,
    UNRECOGNIZED = -1
}
export declare function orderResultStatusFromJSON(object: any): OrderResultStatus;
export declare function orderResultStatusToJSON(object: OrderResultStatus): number;
/** Emitted by an app to request a purchase flow by the client */
export interface CreateOrderEffect {
    /** ID of this effect to route the OrderResultEvent to the correct handler */
    id: string;
    /** List of product SKUs the user intends to purchase */
    skus: string[];
    /** Optional metadata map */
    metadata: {
        [key: string]: string;
    };
}
export interface CreateOrderEffect_MetadataEntry {
    key: string;
    value: string;
}
/** Sent to the app after the purchase attempt has concluded */
export interface OrderResultEvent {
    /** If failed, optional user-presentable error message */
    errorMessage?: string | undefined;
    /** If successful, the order ID for the app to use to verify the purchase */
    orderId?: string | undefined;
    /** The original request */
    order?: CreateOrderEffect | undefined;
    /** Status */
    status: OrderResultStatus;
    /** If failed, optional error code */
    errorCode?: number | undefined;
}
export declare const CreateOrderEffect: {
    $type: "devvit.ui.effects.v1alpha.CreateOrderEffect";
    encode(message: CreateOrderEffect, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CreateOrderEffect;
    fromJSON(object: any): CreateOrderEffect;
    toJSON(message: CreateOrderEffect): unknown;
    create(base?: DeepPartial<CreateOrderEffect>): CreateOrderEffect;
    fromPartial(object: DeepPartial<CreateOrderEffect>): CreateOrderEffect;
};
export declare const CreateOrderEffect_MetadataEntry: {
    $type: "devvit.ui.effects.v1alpha.CreateOrderEffect.MetadataEntry";
    encode(message: CreateOrderEffect_MetadataEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CreateOrderEffect_MetadataEntry;
    fromJSON(object: any): CreateOrderEffect_MetadataEntry;
    toJSON(message: CreateOrderEffect_MetadataEntry): unknown;
    create(base?: DeepPartial<CreateOrderEffect_MetadataEntry>): CreateOrderEffect_MetadataEntry;
    fromPartial(object: DeepPartial<CreateOrderEffect_MetadataEntry>): CreateOrderEffect_MetadataEntry;
};
export declare const OrderResultEvent: {
    $type: "devvit.ui.effects.v1alpha.OrderResultEvent";
    encode(message: OrderResultEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): OrderResultEvent;
    fromJSON(object: any): OrderResultEvent;
    toJSON(message: OrderResultEvent): unknown;
    create(base?: DeepPartial<OrderResultEvent>): OrderResultEvent;
    fromPartial(object: DeepPartial<OrderResultEvent>): OrderResultEvent;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=create_order.d.ts.map