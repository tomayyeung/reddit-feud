/**
 * #rerender_ui.ts
 *
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
/** Automatically re-render UI */
export interface RerenderEffect {
    /** Value greater than zero to wait before calling Render again */
    delaySeconds?: number | undefined;
}
export declare const RerenderEffect: {
    $type: "devvit.ui.effects.v1alpha.RerenderEffect";
    encode(message: RerenderEffect, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): RerenderEffect;
    fromJSON(object: any): RerenderEffect;
    toJSON(message: RerenderEffect): unknown;
    create(base?: DeepPartial<RerenderEffect>): RerenderEffect;
    fromPartial(object: DeepPartial<RerenderEffect>): RerenderEffect;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=rerender_ui.d.ts.map