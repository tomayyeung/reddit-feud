/**
 * #show_form.ts
 *
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
import { Form } from "../../form_builder/v1alpha/form.js";
import { FormFieldValue } from "../../form_builder/v1alpha/value.js";
/** Display a user input form */
export interface ShowFormEffect {
    form?: Form | undefined;
}
/** Form results */
export interface FormSubmittedEvent {
    results: {
        [key: string]: FormFieldValue;
    };
    formId?: string | undefined;
}
export interface FormSubmittedEvent_ResultsEntry {
    key: string;
    value?: FormFieldValue | undefined;
}
export declare const ShowFormEffect: {
    $type: "devvit.ui.effects.v1alpha.ShowFormEffect";
    encode(message: ShowFormEffect, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ShowFormEffect;
    fromJSON(object: any): ShowFormEffect;
    toJSON(message: ShowFormEffect): unknown;
    create(base?: DeepPartial<ShowFormEffect>): ShowFormEffect;
    fromPartial(object: DeepPartial<ShowFormEffect>): ShowFormEffect;
};
export declare const FormSubmittedEvent: {
    $type: "devvit.ui.effects.v1alpha.FormSubmittedEvent";
    encode(message: FormSubmittedEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FormSubmittedEvent;
    fromJSON(object: any): FormSubmittedEvent;
    toJSON(message: FormSubmittedEvent): unknown;
    create(base?: DeepPartial<FormSubmittedEvent>): FormSubmittedEvent;
    fromPartial(object: DeepPartial<FormSubmittedEvent>): FormSubmittedEvent;
};
export declare const FormSubmittedEvent_ResultsEntry: {
    $type: "devvit.ui.effects.v1alpha.FormSubmittedEvent.ResultsEntry";
    encode(message: FormSubmittedEvent_ResultsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FormSubmittedEvent_ResultsEntry;
    fromJSON(object: any): FormSubmittedEvent_ResultsEntry;
    toJSON(message: FormSubmittedEvent_ResultsEntry): unknown;
    create(base?: DeepPartial<FormSubmittedEvent_ResultsEntry>): FormSubmittedEvent_ResultsEntry;
    fromPartial(object: DeepPartial<FormSubmittedEvent_ResultsEntry>): FormSubmittedEvent_ResultsEntry;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=show_form.d.ts.map