import { HandleUIEventRequest, HandleUIEventResponse } from './handle_ui.js';
export class UIEventHandlerClientJSON {
    constructor(rpc) {
        this.rpc = rpc;
        this.HandleUIEvent.bind(this);
    }
    HandleUIEvent(request) {
        const data = HandleUIEventRequest.toJSON(request);
        const promise = this.rpc.request('devvit.ui.events.v1alpha.UIEventHandler', 'HandleUIEvent', 'application/json', data);
        return promise.then((data) => HandleUIEventResponse.fromJSON(data));
    }
}
export class UIEventHandlerClientProtobuf {
    constructor(rpc) {
        this.rpc = rpc;
        this.HandleUIEvent.bind(this);
    }
    HandleUIEvent(request) {
        const data = HandleUIEventRequest.encode(request).finish();
        const promise = this.rpc.request('devvit.ui.events.v1alpha.UIEventHandler', 'HandleUIEvent', 'application/protobuf', data);
        return promise.then((data) => HandleUIEventResponse.decode(data));
    }
}
