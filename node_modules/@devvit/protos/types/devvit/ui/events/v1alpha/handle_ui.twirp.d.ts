/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { HandleUIEventRequest, HandleUIEventResponse } from './handle_ui.js';
export interface UIEventHandlerTwirp<T extends TwirpContext = TwirpContext> {
    HandleUIEvent(ctx: T, request: HandleUIEventRequest): Promise<HandleUIEventResponse>;
}
export declare enum UIEventHandlerMethod {
    HandleUIEvent = "HandleUIEvent"
}
export declare const UIEventHandlerMethodList: UIEventHandlerMethod[];
export declare function createUIEventHandlerServer<T extends TwirpContext = TwirpContext>(service: UIEventHandlerTwirp<T>): TwirpServer<UIEventHandlerTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=handle_ui.twirp.d.ts.map