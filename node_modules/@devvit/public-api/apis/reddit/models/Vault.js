import { asT2ID } from '@devvit/shared-types/tid.js';
import { GraphQL } from '../graphql/GraphQL.js';
export async function getVaultByAddress(address, metadata) {
    return getVaultByParams('GetVaultContactByAddress', '3e2f7966a5c120e64fd2795d06a46595c52d988185be98d3ed71c3f81ae80d2e', {
        provider: 'ethereum', // Only one supported at the moment
        address,
    }, metadata);
}
export async function getVaultByUserId(userId, metadata) {
    return getVaultByParams('GetVaultContactByUserId', 'a854ddc19d0e22c4f36ed917fdbd568f299f3571427e393aee5e2972080fffe9', {
        provider: 'ethereum', // Only one supported at the moment
        userId,
    }, metadata);
}
async function getVaultByParams(operationName, queryHash, params, metadata) {
    const response = await GraphQL.query(operationName, queryHash, params, metadata);
    const contact = response?.data?.vault?.contact;
    const vault = {
        provider: contact?.provider,
        userId: asT2ID(contact?.userId),
        address: contact?.address,
        createdAt: contact?.createdAt,
        isActive: contact?.isActive,
    };
    return vault;
}
