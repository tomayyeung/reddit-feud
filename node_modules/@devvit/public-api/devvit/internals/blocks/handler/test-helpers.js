import { UIEventScope } from '@devvit/protos';
import { Header } from '@devvit/shared-types/Header.js';
import { _latestBlocksHandler } from './BlocksHandler.js';
export const findHookId = (ref) => {
    return ref.id;
};
export const findHookState = (ref) => {
    return getLatestBlocksState()[ref.id];
};
export const findHookValue = (ref) => {
    return findHookState(ref)['value'];
};
export const getLatestBlocksState = () => {
    return _latestBlocksHandler?._latestRenderContext?._state ?? {};
};
export const EmptyRequest = { events: [] };
export const generatePressRequest = (ref) => {
    const event = {
        scope: UIEventScope.ALL,
        hook: ref.id,
        userAction: {
            actionId: ref.id,
        },
    };
    return {
        state: getLatestBlocksState(),
        events: [event],
    };
};
export const generateTimerRequest = (ref) => {
    const event = {
        scope: UIEventScope.ALL,
        hook: ref.id,
        timer: {},
    };
    return {
        state: getLatestBlocksState(),
        events: [event],
    };
};
export const mockMetadata = {
    [Header.AppUser]: {
        values: ['t2_appuser'],
    },
    [Header.Subreddit]: {
        values: ['t5_devvit'],
    },
    [Header.User]: {
        values: ['t2_user'],
    },
};
