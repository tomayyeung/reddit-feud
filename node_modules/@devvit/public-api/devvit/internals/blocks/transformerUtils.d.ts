import type { BlockSizes, BlockSizes_Dimension_Value } from '@devvit/protos';
import type { Devvit } from '../../Devvit.js';
import type { StackParentLayout, TransformContext } from './transformContext.js';
export declare function parseSize(size: Devvit.Blocks.SizeString | undefined): BlockSizes_Dimension_Value | undefined;
/**
 * If a child has a relative size along its parent's main axis, but that parent's axis is not set, omit the dimension.
 * This is done to enforce consistency between web and Yoga (the layout engine used by mobile).
 * */
export declare function omitRelativeSizes(blockSizes: BlockSizes, stackParentLayout: StackParentLayout): BlockSizes;
export declare function makeBlockSizes(props: Devvit.Blocks.BaseProps | undefined, transformContext: TransformContext): BlockSizes | undefined;
//# sourceMappingURL=transformerUtils.d.ts.map