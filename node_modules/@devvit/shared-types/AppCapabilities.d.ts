import type { LinkedBundle } from '@devvit/protos/index.js';
import type { Bundle } from '@devvit/protos/types/devvit/plugin/buildpack/buildpack_common.js';
export declare enum AppCapability {
    Unrecognized = "Unrecognized",
    AppTriggers = "AppTriggers",
    Assets = "Assets",
    Data = "Data",
    HTTP = "HTTP",
    Modlog = "Modlog",
    RedditAPI = "RedditAPI",
    RedditTriggers = "RedditTriggers",
    Scheduler = "Scheduler",
    UI = "UI",
    Moderator = "Moderator",
    Webview = "Webview",
    Payments = "Payments",
    CustomPost = "CustomPost"
}
/** Actor API as recorded in Prisma. */
export type AppCapabilitiesActor = {
    types: readonly {
        readonly name: string;
    }[];
    plugins: readonly {
        readonly fullname: string;
    }[];
};
/**
 * Finds all of the capabilities that an app has based on its actor.
 */
export declare function appCapabilitiesFromActor(actor: Readonly<AppCapabilitiesActor>, hasAssets: boolean, hasWebView: boolean): AppCapability[];
/**
 * Finds all of the capabilities that an app has based on its linked bundle.
 */
export declare function appCapabilitiesFromLinkedBundle(bundle: Readonly<LinkedBundle>): AppCapability[];
/**
 * Finds all of the capabilities that an app has based on its bundle.
 */
export declare function appCapabilitiesFromBundle(bundle: Readonly<Bundle>): AppCapability[];
//# sourceMappingURL=AppCapabilities.d.ts.map