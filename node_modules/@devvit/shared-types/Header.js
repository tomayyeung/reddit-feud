/**
 * Metadata header key. Every system header should start with "devvit-".
 *
 * Synchronize to headers.md.
 */
export const Header = Object.freeze({
    Actor: 'devvit-actor',
    App: 'devvit-app',
    AppUser: 'devvit-app-user',
    AppViewerAuthToken: 'devvit-app-viewer-authorization',
    Caller: 'devvit-caller',
    CallerPortID: 'devvit-caller-port-id',
    Canary: 'devvit-canary',
    Debug: 'devvit-debug',
    GQLHost: 'devvit-gql-host',
    Installation: 'devvit-installation',
    ModPermissions: 'devvit-mod-permissions',
    Post: 'devvit-post',
    PostAuthor: 'devvit-post-author',
    R2Auth: 'devvit-sec-authorization',
    R2Host: 'devvit-r2-host',
    RemoteHostname: 'devvit-remote-hostname',
    SettingsUri: 'devvit-sec-settings-uri',
    StreamID: 'devvit-stream-id',
    Subreddit: 'devvit-subreddit',
    SubredditName: 'devvit-subreddit-name',
    TraceID: 'devvit-trace-id',
    User: 'devvit-user',
    UserAgent: 'devvit-user-agent',
    Version: 'devvit-version',
    Language: 'devvit-accept-language',
    Timezone: 'devvit-accept-timezone',
    AppDependencies: 'devvit-app-dependencies',
});
/** See DevvitGlobal and ContextDebugInfo. */
export var AppDebug;
(function (AppDebug) {
    /** Enable debug logging for blocks. */
    AppDebug["Blocks"] = "blocks";
    /**
     * Log the entire reified blocks JSX/XML tree on each render. Eg:
     *
     *   <hstack><text>hi world</text></hstack>
     */
    AppDebug["EmitSnapshots"] = "emitSnapshots";
    /** Log app state changes. */
    AppDebug["EmitState"] = "emitState";
    /** Enable debug logging for realtime and useChannel() hook. */
    AppDebug["Realtime"] = "realtime";
    /** Enable runtime and dispatcher logging. */
    AppDebug["Runtime"] = "runtime";
    /** Enable debug logging for devvit-surface and dispatcher. */
    AppDebug["Surface"] = "surface";
    /** Enable debug logging for the useAsync() hook family. */
    AppDebug["UseAsync"] = "useAsync";
    /** Enable debug logging for payments APIs */
    AppDebug["Payments"] = "payments";
    /** Enable bootstrap logging */
    AppDebug["Bootstrap"] = "bootstrap";
    /** WebView debug logs */
    AppDebug["WebView"] = "webView";
})(AppDebug || (AppDebug = {}));
