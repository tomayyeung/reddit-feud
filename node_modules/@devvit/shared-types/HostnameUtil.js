/** Actor in the platform, not in a user Bundle. */
export const PLUGIN_NAME = 'default';
/** Actor in the platform, not in a user Bundle. */
export const PLUGIN_OWNER = 'devvit';
export const LOCAL_HOSTNAME = 'local';
export const NODE_HOSTNAME = 'node';
export const REDDIT_API_CNAME = 'redditapi';
export function resolveActorHostname(name, namespace) {
    return childHostname(name, namespace);
}
export function resolvePluginDefinitionHostname(definition, namespace) {
    return resolvePluginHostname(definition.name, namespace);
}
export function resolveSystemHostname(name, namespace) {
    return childHostname(name, getSystemNamespace(namespace));
}
/**
 * Forms a hostname under namespace. Eg:
 *
 *   123, abc.local → 123.abc.local
 *   123, local → 123.local
 */
function childHostname(name, namespace) {
    if (namespace.hostname == null)
        throw Error('Unbound namespace.');
    return `${name}.${namespace.hostname}`.toLocaleLowerCase();
}
function getPluginNamespace(namespace) {
    return { hostname: childHostname('plugins', namespace) };
}
function getSystemNamespace(namespace) {
    return { hostname: childHostname('system', namespace) };
}
function resolvePluginHostname(name, namespace) {
    return childHostname(name, getPluginNamespace(namespace));
}
