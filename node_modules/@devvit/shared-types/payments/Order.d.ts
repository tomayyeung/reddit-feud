import type { Order as OrderProto } from '@devvit/protos/payments.js';
import { OrderStatus as OrderStatusProto } from '@devvit/protos/payments.js';
import type { Product } from './Product.js';
/**
 * The status of an order.
 */
export declare const enum OrderStatus {
    NEW = "NEW",
    CREATED = "CREATED",
    PAID = "PAID",
    DELIVERED = "DELIVERED",
    CANCELED = "CANCELED",
    REVERTED = "REVERTED",
    UNRECOGNIZED = "UNRECOGNIZED"
}
/**
 * Maps an OrderStatus enum to the corresponding protobuf enum value.
 */
export declare function mapOrderStatusToProto(status: OrderStatus): OrderStatusProto;
/**
 * An order for products purchased through Devvit by a Reddit user.
 */
export type Order = {
    /** Unique identifer for the order */
    id: string;
    /** Where the order is in its lifecycle */
    status: OrderStatus;
    /** When the order was created */
    createdAt: Date | null;
    /** When the order was last updated */
    updatedAt: Date | null;
    /** The products that were ordered */
    products: Product[];
};
/**
 * Converts an Order protobuf message to an Order object.
 */
export declare function orderFromProto(data: OrderProto): Order;
//# sourceMappingURL=Order.d.ts.map