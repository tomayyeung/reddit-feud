import { OrderStatus as OrderStatusProto } from '@devvit/protos/payments.js';
import { Header } from '../Header.js';
import { productFromProto } from './Product.js';
/**
 * The status of an order.
 */
export var OrderStatus;
(function (OrderStatus) {
    OrderStatus["NEW"] = "NEW";
    OrderStatus["CREATED"] = "CREATED";
    OrderStatus["PAID"] = "PAID";
    OrderStatus["DELIVERED"] = "DELIVERED";
    OrderStatus["CANCELED"] = "CANCELED";
    OrderStatus["REVERTED"] = "REVERTED";
    OrderStatus["UNRECOGNIZED"] = "UNRECOGNIZED";
})(OrderStatus || (OrderStatus = {}));
/**
 * Maps an OrderStatus enum to the corresponding protobuf enum value.
 */
export function mapOrderStatusToProto(status) {
    switch (status) {
        case OrderStatus.NEW:
            return OrderStatusProto.ORDER_STATUS_NEW;
        case OrderStatus.CREATED:
            return OrderStatusProto.ORDER_STATUS_CREATED;
        case OrderStatus.PAID:
            return OrderStatusProto.ORDER_STATUS_PAID;
        case OrderStatus.DELIVERED:
            return OrderStatusProto.ORDER_STATUS_DELIVERED;
        case OrderStatus.CANCELED:
            return OrderStatusProto.ORDER_STATUS_CANCELED;
        case OrderStatus.REVERTED:
            return OrderStatusProto.ORDER_STATUS_REVERTED;
        case OrderStatus.UNRECOGNIZED:
            return OrderStatusProto.UNRECOGNIZED;
    }
}
/**
 * Maps an OrderStatus protobuf enum value to the corresponding OrderStatus enum.
 */
function mapProtoToOrderStatus(status) {
    switch (status) {
        case OrderStatusProto.ORDER_STATUS_NEW:
            return OrderStatus.NEW;
        case OrderStatusProto.ORDER_STATUS_CREATED:
            return OrderStatus.CREATED;
        case OrderStatusProto.ORDER_STATUS_PAID:
            return OrderStatus.PAID;
        case OrderStatusProto.ORDER_STATUS_DELIVERED:
            return OrderStatus.DELIVERED;
        case OrderStatusProto.ORDER_STATUS_CANCELED:
            return OrderStatus.CANCELED;
        case OrderStatusProto.ORDER_STATUS_REVERTED:
            return OrderStatus.REVERTED;
        case OrderStatusProto.ORDER_STATUS_UNSPECIFIED:
        case OrderStatusProto.UNRECOGNIZED:
            return OrderStatus.UNRECOGNIZED;
    }
}
/**
 * Converts an Order protobuf message to an Order object.
 */
export function orderFromProto(data) {
    sanitizeOrderMetadata(data);
    return {
        id: data.id,
        status: mapProtoToOrderStatus(data.status),
        createdAt: data.createdAt ?? null,
        updatedAt: data.updatedAt ?? null,
        products: data.products.map(productFromProto),
    };
}
// deletes system metadata
function sanitizeOrderMetadata(order) {
    delete order.metadata[Header.Post];
}
