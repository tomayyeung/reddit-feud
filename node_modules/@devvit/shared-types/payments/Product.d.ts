import type { Product as ProductProto } from '@devvit/protos/payments.js';
import { AccountingType as AccountingTypeProto } from '@devvit/protos/payments.js';
/**
 * A unique identifier for a product.
 */
export type SKU = string;
export declare enum AccountingType {
    INSTANT = "INSTANT",
    DURABLE = "DURABLE",
    CONSUMABLE = "CONSUMABLE",
    VALID_FOR_1D = "VALID_FOR_1D",
    VALID_FOR_7D = "VALID_FOR_7D",
    VALID_FOR_30D = "VALID_FOR_30D",
    VALID_FOR_1Y = "VALID_FOR_1Y",
    UNRECOGNIZED = "UNRECOGNIZED"
}
/**
 * Maps an AccountingType enum to the corresponding protobuf enum value.
 */
export declare function mapAccountingTypeToProto(type: AccountingType): AccountingTypeProto;
/**
 * Maps an AccountingType protobuf enum value to the corresponding AccountingType enum.
 */
export declare function mapProtoToAccountingType(typeProto: AccountingTypeProto): AccountingType;
/**
 * A product that can be sold by Devvit developers
 * and purchased by Reddit users.
 */
export type Product = {
    sku: SKU;
    price: number;
    displayName: string;
    accountingType: AccountingType;
    description?: string;
    metadata: Readonly<Record<string, string>>;
    images?: {
        icon: string;
    };
};
/**
 * Converts an Product protobuf message to an Product object.
 */
export declare function productFromProto(data: ProductProto): Product;
export declare function newProductId(appVersionId: string, productSku: string): string;
//# sourceMappingURL=Product.d.ts.map